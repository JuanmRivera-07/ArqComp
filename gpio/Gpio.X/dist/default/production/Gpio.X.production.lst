

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Thu Nov 19 22:01:37 2020

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16  0000                     
    17                           ; Version 1.44
    18                           ; Generated 14/09/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           	psect	idataCOMRAM
    53  007AB1                     __pidataCOMRAM:
    54                           	opt stack 0
    55                           
    56                           ;initializer for _velocidad
    57  007AB1  0001               	dw	1
    58  007AB3  0000               	dw	0
    59                           
    60                           ;initializer for _efecto
    61  007AB5  01                 	db	1
    62  0000                     _PORTBbits	set	3969
    63  0000                     _INTCON2bits	set	4081
    64  0000                     _TRISBbits	set	3987
    65  0000                     _LATD	set	3980
    66  0000                     _TRISD	set	3989
    67                           
    68                           ; #config settings
    69  0000                     
    70                           	psect	cinit
    71  007AB6                     __pcinit:
    72                           	opt stack 0
    73  007AB6                     start_initialization:
    74                           	opt stack 0
    75  007AB6                     __initialization:
    76                           	opt stack 0
    77                           
    78                           ; Initialize objects allocated to COMRAM (5 bytes)
    79                           ; load TBLPTR registers with __pidataCOMRAM
    80  007AB6  0EB1               	movlw	low __pidataCOMRAM
    81  007AB8  6EF6               	movwf	tblptrl,c
    82  007ABA  0E7A               	movlw	high __pidataCOMRAM
    83  007ABC  6EF7               	movwf	tblptrh,c
    84  007ABE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    85  007AC0  6EF8               	movwf	tblptru,c
    86  007AC2  EE00  F00B         	lfsr	0,__pdataCOMRAM
    87  007AC6  EE10 F005          	lfsr	1,5
    88  007ACA                     copy_data0:
    89  007ACA  0009               	tblrd		*+
    90  007ACC  CFF5 FFEE          	movff	tablat,postinc0
    91  007AD0  50E5               	movf	postdec1,w,c
    92  007AD2  50E1               	movf	fsr1l,w,c
    93  007AD4  E1FA               	bnz	copy_data0
    94  007AD6                     end_of_initialization:
    95                           	opt stack 0
    96  007AD6                     __end_of__initialization:
    97                           	opt stack 0
    98  007AD6  0E00               	movlw	low (__Lmediumconst shr (0+16))
    99  007AD8  6EF8               	movwf	tblptru,c
   100  007ADA  0100               	movlb	0
   101  007ADC  EF70  F03D         	goto	_main	;jump to C main() function
   102                           tblptru	equ	0xFF8
   103                           tblptrh	equ	0xFF7
   104                           tblptrl	equ	0xFF6
   105                           tablat	equ	0xFF5
   106                           postinc0	equ	0xFEE
   107                           postdec1	equ	0xFE5
   108                           fsr1l	equ	0xFE1
   109                           
   110                           	psect	dataCOMRAM
   111  00000B                     __pdataCOMRAM:
   112                           	opt stack 0
   113  00000B                     _velocidad:
   114                           	opt stack 0
   115  00000B                     	ds	4
   116  00000F                     _efecto:
   117                           	opt stack 0
   118  00000F                     	ds	1
   119                           tblptru	equ	0xFF8
   120                           tblptrh	equ	0xFF7
   121                           tblptrl	equ	0xFF6
   122                           tablat	equ	0xFF5
   123                           postinc0	equ	0xFEE
   124                           postdec1	equ	0xFE5
   125                           fsr1l	equ	0xFE1
   126                           
   127                           	psect	cstackCOMRAM
   128  000001                     __pcstackCOMRAM:
   129                           	opt stack 0
   130  000001                     ??_secuencial_Efecto1:
   131  000001                     ??_secuencial_Efecto2:
   132  000001                     ??_secuencial_Efecto3:
   133  000001                     ??_secuencial_Efecto4:
   134  000001                     
   135                           ; 2 bytes @ 0x0
   136  000001                     	ds	2
   137  000003                     secuencial_Efecto1@i:
   138                           	opt stack 0
   139  000003                     secuencial_Efecto3@i:
   140                           	opt stack 0
   141                           
   142                           ; 2 bytes @ 0x2
   143  000003                     	ds	1
   144  000004                     secuencial_Efecto4@i:
   145                           	opt stack 0
   146                           
   147                           ; 2 bytes @ 0x3
   148  000004                     	ds	1
   149  000005                     secuencial_Efecto2@j:
   150                           	opt stack 0
   151                           
   152                           ; 2 bytes @ 0x4
   153  000005                     	ds	1
   154  000006                     secuencial_Efecto4@m:
   155                           	opt stack 0
   156                           
   157                           ; 2 bytes @ 0x5
   158  000006                     	ds	1
   159  000007                     secuencial_Efecto2@i:
   160                           	opt stack 0
   161                           
   162                           ; 2 bytes @ 0x6
   163  000007                     	ds	1
   164  000008                     secuencial_Efecto4@n:
   165                           	opt stack 0
   166                           
   167                           ; 2 bytes @ 0x7
   168  000008                     	ds	2
   169  00000A                     ??_main:
   170                           
   171                           ; 1 bytes @ 0x9
   172  00000A                     	ds	1
   173                           tblptru	equ	0xFF8
   174                           tblptrh	equ	0xFF7
   175                           tblptrl	equ	0xFF6
   176                           tablat	equ	0xFF5
   177                           postinc0	equ	0xFEE
   178                           postdec1	equ	0xFE5
   179                           fsr1l	equ	0xFE1
   180                           
   181 ;;
   182 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   183 ;;
   184 ;; *************** function _main *****************
   185 ;; Defined at:
   186 ;;		line 42 in file "Secuencia_Main.c"
   187 ;; Parameters:    Size  Location     Type
   188 ;;		None
   189 ;; Auto vars:     Size  Location     Type
   190 ;;		None
   191 ;; Return value:  Size  Location     Type
   192 ;;                  2   28[None  ] int 
   193 ;; Registers used:
   194 ;;		wreg, status,2, status,0, cstack
   195 ;; Tracked objects:
   196 ;;		On entry : 0/0
   197 ;;		On exit  : 0/0
   198 ;;		Unchanged: 0/0
   199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   200 ;;      Params:         0       0       0       0       0       0       0       0       0
   201 ;;      Locals:         0       0       0       0       0       0       0       0       0
   202 ;;      Temps:          1       0       0       0       0       0       0       0       0
   203 ;;      Totals:         1       0       0       0       0       0       0       0       0
   204 ;;Total ram usage:        1 bytes
   205 ;; Hardware stack levels required when called:    1
   206 ;; This function calls:
   207 ;;		_secuencial_Efecto1
   208 ;;		_secuencial_Efecto2
   209 ;;		_secuencial_Efecto3
   210 ;;		_secuencial_Efecto4
   211 ;; This function is called by:
   212 ;;		Startup code after reset
   213 ;; This function uses a non-reentrant model
   214 ;;
   215                           
   216                           	psect	text0
   217  007AE0                     __ptext0:
   218                           	opt stack 0
   219  007AE0                     _main:
   220                           	opt stack 30
   221                           
   222                           ;Secuencia_Main.c: 43: TRISD = 0;
   223                           
   224                           ;incstack = 0
   225  007AE0  0E00               	movlw	0
   226  007AE2  6E95               	movwf	3989,c	;volatile
   227                           
   228                           ;Secuencia_Main.c: 44: LATD = 0;
   229  007AE4  0E00               	movlw	0
   230  007AE6  6E8C               	movwf	3980,c	;volatile
   231                           
   232                           ;Secuencia_Main.c: 45: TRISBbits.TRISB7 = 1;
   233  007AE8  8E93               	bsf	3987,7,c	;volatile
   234                           
   235                           ;Secuencia_Main.c: 46: TRISBbits.TRISB6 = 1;
   236  007AEA  8C93               	bsf	3987,6,c	;volatile
   237                           
   238                           ;Secuencia_Main.c: 47: INTCON2bits.RBPU = 0;
   239  007AEC  9EF1               	bcf	intcon2,7,c	;volatile
   240  007AEE                     
   241                           ;Secuencia_Main.c: 50: if (!PORTBbits.RB7) {
   242  007AEE  BE81               	btfsc	3969,7,c	;volatile
   243  007AF0  D01B               	goto	l32
   244                           
   245                           ;Secuencia_Main.c: 51: _delay((unsigned long)((50)*(8000000/4000.0)));
   246  007AF2  0E82               	movlw	130
   247  007AF4  6E0A               	movwf	??_main& (0+255),c
   248  007AF6  0EDE               	movlw	222
   249  007AF8                     u417:
   250  007AF8  2EE8               	decfsz	wreg,f,c
   251  007AFA  D7FE               	bra	u417
   252  007AFC  2E0A               	decfsz	??_main& (0+255),f,c
   253  007AFE  D7FC               	bra	u417
   254                           
   255                           ;Secuencia_Main.c: 52: if(++efecto==5){efecto=1;}
   256  007B00  2A0F               	incf	_efecto,f,c
   257  007B02  0E05               	movlw	5
   258  007B04  180F               	xorwf	_efecto,w,c
   259  007B06  A4D8               	btfss	status,2,c
   260  007B08  D00F               	goto	l32
   261  007B0A  0E01               	movlw	1
   262  007B0C  6E0F               	movwf	_efecto,c
   263                           
   264                           ;Secuencia_Main.c: 53: }
   265                           ;Secuencia_Main.c: 55: switch (efecto) {
   266  007B0E  D00C               	goto	l32
   267  007B10  ECA2  F03D         	call	_secuencial_Efecto1	;wreg free
   268                           
   269                           ;Secuencia_Main.c: 57: break;
   270  007B14  D7EC               	goto	l29
   271  007B16  ECB2  F03E         	call	_secuencial_Efecto2	;wreg free
   272                           
   273                           ;Secuencia_Main.c: 59: break;
   274  007B1A  D7E9               	goto	l29
   275  007B1C  EC2A  F03E         	call	_secuencial_Efecto3	;wreg free
   276                           
   277                           ;Secuencia_Main.c: 61: break;
   278  007B20  D7E6               	goto	l29
   279  007B22  EC4C  F03F         	call	_secuencial_Efecto4	;wreg free
   280                           
   281                           ;Secuencia_Main.c: 64: }
   282                           
   283                           ;Secuencia_Main.c: 63: break;
   284  007B26  D7E3               	goto	l29
   285  007B28                     l32:
   286  007B28  500F               	movf	_efecto,w,c
   287                           
   288                           ; Switch size 1, requested type "space"
   289                           ; Number of cases is 4, Range of values is 1 to 4
   290                           ; switch strategies available:
   291                           ; Name         Instructions Cycles
   292                           ; simple_byte           13     7 (average)
   293                           ;	Chosen strategy is simple_byte
   294  007B2A  0A01               	xorlw	1	; case 1
   295  007B2C  B4D8               	btfsc	status,2,c
   296  007B2E  D7F0               	goto	l33
   297  007B30  0A03               	xorlw	3	; case 2
   298  007B32  B4D8               	btfsc	status,2,c
   299  007B34  D7F0               	goto	l35
   300  007B36  0A01               	xorlw	1	; case 3
   301  007B38  B4D8               	btfsc	status,2,c
   302  007B3A  D7F0               	goto	l36
   303  007B3C  0A07               	xorlw	7	; case 4
   304  007B3E  B4D8               	btfsc	status,2,c
   305  007B40  D7F0               	goto	l37
   306  007B42  D7D5               	goto	l29
   307  007B44                     __end_of_main:
   308                           	opt stack 0
   309                           tblptru	equ	0xFF8
   310                           tblptrh	equ	0xFF7
   311                           tblptrl	equ	0xFF6
   312                           tablat	equ	0xFF5
   313                           intcon2	equ	0xFF1
   314                           postinc0	equ	0xFEE
   315                           wreg	equ	0xFE8
   316                           postdec1	equ	0xFE5
   317                           fsr1l	equ	0xFE1
   318                           status	equ	0xFD8
   319                           
   320 ;; *************** function _secuencial_Efecto4 *****************
   321 ;; Defined at:
   322 ;;		line 114 in file "Secuencia_Main.c"
   323 ;; Parameters:    Size  Location     Type
   324 ;;		None
   325 ;; Auto vars:     Size  Location     Type
   326 ;;  i               2    3[COMRAM] int 
   327 ;;  n               2    7[COMRAM] volatile unsigned int 
   328 ;;  m               2    5[COMRAM] volatile unsigned int 
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      void 
   331 ;; Registers used:
   332 ;;		wreg, status,2, status,0
   333 ;; Tracked objects:
   334 ;;		On entry : 0/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   338 ;;      Params:         0       0       0       0       0       0       0       0       0
   339 ;;      Locals:         6       0       0       0       0       0       0       0       0
   340 ;;      Temps:          3       0       0       0       0       0       0       0       0
   341 ;;      Totals:         9       0       0       0       0       0       0       0       0
   342 ;;Total ram usage:        9 bytes
   343 ;; Hardware stack levels used:    1
   344 ;; This function calls:
   345 ;;		Nothing
   346 ;; This function is called by:
   347 ;;		_main
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351                           	psect	text1
   352  007E98                     __ptext1:
   353                           	opt stack 0
   354  007E98                     _secuencial_Efecto4:
   355                           	opt stack 30
   356                           
   357                           ;Secuencia_Main.c: 115: volatile unsigned int m=0,n=0;
   358                           
   359                           ;incstack = 0
   360  007E98  0E00               	movlw	0
   361  007E9A  6E07               	movwf	secuencial_Efecto4@m+1,c	;volatile
   362  007E9C  0E00               	movlw	0
   363  007E9E  6E06               	movwf	secuencial_Efecto4@m,c	;volatile
   364  007EA0  0E00               	movlw	0
   365  007EA2  6E09               	movwf	secuencial_Efecto4@n+1,c	;volatile
   366  007EA4  0E00               	movlw	0
   367  007EA6  6E08               	movwf	secuencial_Efecto4@n,c	;volatile
   368                           
   369                           ;Secuencia_Main.c: 116: for (int i = 0; i < 5; i++) {
   370  007EA8  0E00               	movlw	0
   371  007EAA  6E05               	movwf	secuencial_Efecto4@i+1,c
   372  007EAC  0E00               	movlw	0
   373  007EAE  6E04               	movwf	secuencial_Efecto4@i,c
   374  007EB0  BE05               	btfsc	secuencial_Efecto4@i+1,7,c
   375  007EB2  D008               	goto	l85
   376  007EB4  5005               	movf	secuencial_Efecto4@i+1,w,c
   377  007EB6  E105               	bnz	u290
   378  007EB8  0E05               	movlw	5
   379  007EBA  5C04               	subwf	secuencial_Efecto4@i,w,c
   380  007EBC  B0D8               	btfsc	status,0,c
   381  007EBE  0012               	return	
   382  007EC0  D001               	goto	l85
   383  007EC2                     u290:
   384  007EC2  0012               	return	
   385  007EC4                     l85:
   386                           
   387                           ;Secuencia_Main.c: 117: LATD = m+n;
   388  007EC4  5006               	movf	secuencial_Efecto4@m,w,c	;volatile
   389  007EC6  2408               	addwf	secuencial_Efecto4@n,w,c	;volatile
   390  007EC8  6E8C               	movwf	3980,c	;volatile
   391                           
   392                           ;Secuencia_Main.c: 118: m += (1 << i) & 0x0f;
   393  007ECA  C004  F001         	movff	secuencial_Efecto4@i,??_secuencial_Efecto4
   394  007ECE  0E01               	movlw	1
   395  007ED0  6E02               	movwf	(??_secuencial_Efecto4+1)& (0+255),c
   396  007ED2  0E00               	movlw	0
   397  007ED4  6E03               	movwf	(??_secuencial_Efecto4+2)& (0+255),c
   398  007ED6  2A01               	incf	??_secuencial_Efecto4,f,c
   399  007ED8  D003               	goto	u304
   400  007EDA                     u305:
   401  007EDA  90D8               	bcf	status,0,c
   402  007EDC  3602               	rlcf	??_secuencial_Efecto4+1,f,c
   403  007EDE  3603               	rlcf	??_secuencial_Efecto4+2,f,c
   404  007EE0                     u304:
   405  007EE0  2E01               	decfsz	??_secuencial_Efecto4,f,c
   406  007EE2  D7FB               	goto	u305
   407  007EE4  0E0F               	movlw	15
   408  007EE6  1602               	andwf	??_secuencial_Efecto4+1,f,c
   409  007EE8  0E00               	movlw	0
   410  007EEA  1603               	andwf	??_secuencial_Efecto4+2,f,c
   411  007EEC  5002               	movf	??_secuencial_Efecto4+1,w,c
   412  007EEE  2606               	addwf	secuencial_Efecto4@m,f,c	;volatile
   413  007EF0  5003               	movf	??_secuencial_Efecto4+2,w,c
   414  007EF2  2207               	addwfc	secuencial_Efecto4@m+1,f,c	;volatile
   415                           
   416                           ;Secuencia_Main.c: 119: n += (1 << (7-i)) & 0xf0;
   417  007EF4  5004               	movf	secuencial_Efecto4@i,w,c
   418  007EF6  0800               	sublw	0
   419  007EF8  6E01               	movwf	??_secuencial_Efecto4& (0+255),c
   420  007EFA  0E07               	movlw	7
   421  007EFC  2601               	addwf	??_secuencial_Efecto4,f,c
   422  007EFE  0E01               	movlw	1
   423  007F00  6E02               	movwf	(??_secuencial_Efecto4+1)& (0+255),c
   424  007F02  0E00               	movlw	0
   425  007F04  6E03               	movwf	(??_secuencial_Efecto4+2)& (0+255),c
   426  007F06  2A01               	incf	??_secuencial_Efecto4,f,c
   427  007F08  D003               	goto	u314
   428  007F0A                     u315:
   429  007F0A  90D8               	bcf	status,0,c
   430  007F0C  3602               	rlcf	??_secuencial_Efecto4+1,f,c
   431  007F0E  3603               	rlcf	??_secuencial_Efecto4+2,f,c
   432  007F10                     u314:
   433  007F10  2E01               	decfsz	??_secuencial_Efecto4,f,c
   434  007F12  D7FB               	goto	u315
   435  007F14  0EF0               	movlw	240
   436  007F16  1602               	andwf	??_secuencial_Efecto4+1,f,c
   437  007F18  0E00               	movlw	0
   438  007F1A  1603               	andwf	??_secuencial_Efecto4+2,f,c
   439  007F1C  5002               	movf	??_secuencial_Efecto4+1,w,c
   440  007F1E  2608               	addwf	secuencial_Efecto4@n,f,c	;volatile
   441  007F20  5003               	movf	??_secuencial_Efecto4+2,w,c
   442  007F22  2209               	addwfc	secuencial_Efecto4@n+1,f,c	;volatile
   443                           
   444                           ;Secuencia_Main.c: 120: if(velocidad==1){_delay((unsigned long)((50)*(8000000/4000.0)));
      +                          }
   445  007F24  040B               	decf	_velocidad,w,c
   446  007F26  100C               	iorwf	_velocidad+1,w,c
   447  007F28  100D               	iorwf	_velocidad+2,w,c
   448  007F2A  100E               	iorwf	_velocidad+3,w,c
   449  007F2C  A4D8               	btfss	status,2,c
   450  007F2E  D008               	goto	l87
   451  007F30  0E82               	movlw	130
   452  007F32  6E01               	movwf	??_secuencial_Efecto4& (0+255),c
   453  007F34  0EDE               	movlw	222
   454  007F36                     u427:
   455  007F36  2EE8               	decfsz	wreg,f,c
   456  007F38  D7FE               	bra	u427
   457  007F3A  2E01               	decfsz	??_secuencial_Efecto4& (0+255),f,c
   458  007F3C  D7FC               	bra	u427
   459  007F3E  D03A               	goto	l93
   460  007F40                     l87:
   461                           
   462                           ;Secuencia_Main.c: 121: else if(velocidad==2){_delay((unsigned long)((100)*(8000000/4000
      +                          .0)));}
   463  007F40  0E02               	movlw	2
   464  007F42  180B               	xorwf	_velocidad,w,c
   465  007F44  100C               	iorwf	_velocidad+1,w,c
   466  007F46  100D               	iorwf	_velocidad+2,w,c
   467  007F48  100E               	iorwf	_velocidad+3,w,c
   468  007F4A  A4D8               	btfss	status,2,c
   469  007F4C  D00D               	goto	l89
   470  007F4E  0E02               	movlw	2
   471  007F50  6E02               	movwf	(??_secuencial_Efecto4+1)& (0+255),c
   472  007F52  0E04               	movlw	4
   473  007F54  6E01               	movwf	??_secuencial_Efecto4& (0+255),c
   474  007F56  0EBA               	movlw	186
   475  007F58                     u437:
   476  007F58  2EE8               	decfsz	wreg,f,c
   477  007F5A  D7FE               	bra	u437
   478  007F5C  2E01               	decfsz	??_secuencial_Efecto4& (0+255),f,c
   479  007F5E  D7FC               	bra	u437
   480  007F60  2E02               	decfsz	(??_secuencial_Efecto4+1)& (0+255),f,c
   481  007F62  D7FA               	bra	u437
   482  007F64  D000               	nop2	
   483  007F66  D026               	goto	l93
   484  007F68                     l89:
   485                           
   486                           ;Secuencia_Main.c: 122: else if(velocidad==3){_delay((unsigned long)((200)*(8000000/4000
      +                          .0)));}
   487  007F68  0E03               	movlw	3
   488  007F6A  180B               	xorwf	_velocidad,w,c
   489  007F6C  100C               	iorwf	_velocidad+1,w,c
   490  007F6E  100D               	iorwf	_velocidad+2,w,c
   491  007F70  100E               	iorwf	_velocidad+3,w,c
   492  007F72  A4D8               	btfss	status,2,c
   493  007F74  D00C               	goto	l91
   494  007F76  0E03               	movlw	3
   495  007F78  6E02               	movwf	(??_secuencial_Efecto4+1)& (0+255),c
   496  007F7A  0E08               	movlw	8
   497  007F7C  6E01               	movwf	??_secuencial_Efecto4& (0+255),c
   498  007F7E  0E77               	movlw	119
   499  007F80                     u447:
   500  007F80  2EE8               	decfsz	wreg,f,c
   501  007F82  D7FE               	bra	u447
   502  007F84  2E01               	decfsz	??_secuencial_Efecto4& (0+255),f,c
   503  007F86  D7FC               	bra	u447
   504  007F88  2E02               	decfsz	(??_secuencial_Efecto4+1)& (0+255),f,c
   505  007F8A  D7FA               	bra	u447
   506  007F8C  D012               	goto	L1
   507  007F8E                     l91:
   508                           
   509                           ;Secuencia_Main.c: 123: else if(velocidad==4){_delay((unsigned long)((400)*(8000000/4000
      +                          .0)));}
   510  007F8E  0E04               	movlw	4
   511  007F90  180B               	xorwf	_velocidad,w,c
   512  007F92  100C               	iorwf	_velocidad+1,w,c
   513  007F94  100D               	iorwf	_velocidad+2,w,c
   514  007F96  100E               	iorwf	_velocidad+3,w,c
   515  007F98  A4D8               	btfss	status,2,c
   516  007F9A  D00C               	goto	l93
   517  007F9C  0E05               	movlw	5
   518  007F9E  6E02               	movwf	(??_secuencial_Efecto4+1)& (0+255),c
   519  007FA0  0E0F               	movlw	15
   520  007FA2  6E01               	movwf	??_secuencial_Efecto4& (0+255),c
   521  007FA4  0EF1               	movlw	241
   522  007FA6                     u457:
   523  007FA6  2EE8               	decfsz	wreg,f,c
   524  007FA8  D7FE               	bra	u457
   525  007FAA  2E01               	decfsz	??_secuencial_Efecto4& (0+255),f,c
   526  007FAC  D7FC               	bra	u457
   527  007FAE  2E02               	decfsz	(??_secuencial_Efecto4+1)& (0+255),f,c
   528  007FB0  D7FA               	bra	u457
   529  007FB2                     L1:
   530  007FB2  F000               	nop	
   531  007FB4                     l93:
   532                           
   533                           ;Secuencia_Main.c: 125: if (!PORTBbits.RB6) {
   534  007FB4  BC81               	btfsc	3969,6,c	;volatile
   535  007FB6  D01C               	goto	l95
   536                           
   537                           ;Secuencia_Main.c: 126: _delay((unsigned long)((50)*(8000000/4000.0)));
   538  007FB8  0E82               	movlw	130
   539  007FBA  6E01               	movwf	??_secuencial_Efecto4& (0+255),c
   540  007FBC  0EDE               	movlw	222
   541  007FBE                     u467:
   542  007FBE  2EE8               	decfsz	wreg,f,c
   543  007FC0  D7FE               	bra	u467
   544  007FC2  2E01               	decfsz	??_secuencial_Efecto4& (0+255),f,c
   545  007FC4  D7FC               	bra	u467
   546                           
   547                           ;Secuencia_Main.c: 127: if(++velocidad==5){velocidad=1;}
   548  007FC6  0E01               	movlw	1
   549  007FC8  260B               	addwf	_velocidad,f,c
   550  007FCA  0E00               	movlw	0
   551  007FCC  220C               	addwfc	_velocidad+1,f,c
   552  007FCE  220D               	addwfc	_velocidad+2,f,c
   553  007FD0  220E               	addwfc	_velocidad+3,f,c
   554  007FD2  0E05               	movlw	5
   555  007FD4  180B               	xorwf	_velocidad,w,c
   556  007FD6  100C               	iorwf	_velocidad+1,w,c
   557  007FD8  100D               	iorwf	_velocidad+2,w,c
   558  007FDA  100E               	iorwf	_velocidad+3,w,c
   559  007FDC  A4D8               	btfss	status,2,c
   560  007FDE  D008               	goto	l95
   561  007FE0  0E01               	movlw	1
   562  007FE2  6E0B               	movwf	_velocidad,c
   563  007FE4  0E00               	movlw	0
   564  007FE6  6E0C               	movwf	_velocidad+1,c
   565  007FE8  0E00               	movlw	0
   566  007FEA  6E0D               	movwf	_velocidad+2,c
   567  007FEC  0E00               	movlw	0
   568  007FEE  6E0E               	movwf	_velocidad+3,c
   569  007FF0                     l95:
   570  007FF0  4A04               	infsnz	secuencial_Efecto4@i,f,c
   571  007FF2  2A05               	incf	secuencial_Efecto4@i+1,f,c
   572  007FF4  BE05               	btfsc	secuencial_Efecto4@i+1,7,c
   573  007FF6  D766               	goto	l85
   574  007FF8  5005               	movf	secuencial_Efecto4@i+1,w,c
   575  007FFA  E101               	bnz	l96
   576  007FFC  D75D               	goto	L2
   577  007FFE                     l96:
   578  007FFE  0012               	return		;funcret
   579  008000                     __end_of_secuencial_Efecto4:
   580                           	opt stack 0
   581                           tblptru	equ	0xFF8
   582                           tblptrh	equ	0xFF7
   583                           tblptrl	equ	0xFF6
   584                           tablat	equ	0xFF5
   585                           intcon2	equ	0xFF1
   586                           postinc0	equ	0xFEE
   587                           wreg	equ	0xFE8
   588                           postdec1	equ	0xFE5
   589                           fsr1l	equ	0xFE1
   590                           status	equ	0xFD8
   591                           
   592 ;; *************** function _secuencial_Efecto3 *****************
   593 ;; Defined at:
   594 ;;		line 99 in file "Secuencia_Main.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;  i               2    2[COMRAM] int 
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      void 
   601 ;; Registers used:
   602 ;;		wreg, status,2, status,0
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   608 ;;      Params:         0       0       0       0       0       0       0       0       0
   609 ;;      Locals:         2       0       0       0       0       0       0       0       0
   610 ;;      Temps:          2       0       0       0       0       0       0       0       0
   611 ;;      Totals:         4       0       0       0       0       0       0       0       0
   612 ;;Total ram usage:        4 bytes
   613 ;; Hardware stack levels used:    1
   614 ;; This function calls:
   615 ;;		Nothing
   616 ;; This function is called by:
   617 ;;		_main
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           	psect	text2
   622  007C54                     __ptext2:
   623                           	opt stack 0
   624  007C54                     _secuencial_Efecto3:
   625                           	opt stack 30
   626                           
   627                           ;Secuencia_Main.c: 100: for (int i = 0; i < 9; i++) {
   628                           
   629                           ;incstack = 0
   630  007C54  0E00               	movlw	0
   631  007C56  6E04               	movwf	secuencial_Efecto3@i+1,c
   632  007C58  0E00               	movlw	0
   633  007C5A  6E03               	movwf	secuencial_Efecto3@i,c
   634  007C5C  BE04               	btfsc	secuencial_Efecto3@i+1,7,c
   635  007C5E  D008               	goto	l71
   636  007C60  5004               	movf	secuencial_Efecto3@i+1,w,c
   637  007C62  E105               	bnz	u200
   638  007C64  0E09               	movlw	9
   639  007C66  5C03               	subwf	secuencial_Efecto3@i,w,c
   640  007C68  B0D8               	btfsc	status,0,c
   641  007C6A  0012               	return	
   642  007C6C  D001               	goto	l71
   643  007C6E                     u200:
   644  007C6E  0012               	return	
   645  007C70                     l71:
   646                           
   647                           ;Secuencia_Main.c: 101: LATD = (1 << i) - 1;
   648  007C70  C003  F001         	movff	secuencial_Efecto3@i,??_secuencial_Efecto3
   649  007C74  0E01               	movlw	1
   650  007C76  6E02               	movwf	(??_secuencial_Efecto3+1)& (0+255),c
   651  007C78  2A01               	incf	??_secuencial_Efecto3,f,c
   652  007C7A  D002               	goto	u214
   653  007C7C                     u215:
   654  007C7C  90D8               	bcf	status,0,c
   655  007C7E  3602               	rlcf	??_secuencial_Efecto3+1,f,c
   656  007C80                     u214:
   657  007C80  2E01               	decfsz	??_secuencial_Efecto3,f,c
   658  007C82  D7FC               	goto	u215
   659  007C84  0402               	decf	??_secuencial_Efecto3+1,w,c
   660  007C86  6E8C               	movwf	3980,c	;volatile
   661                           
   662                           ;Secuencia_Main.c: 102: if(velocidad==1){_delay((unsigned long)((50)*(8000000/4000.0)));
      +                          }
   663  007C88  040B               	decf	_velocidad,w,c
   664  007C8A  100C               	iorwf	_velocidad+1,w,c
   665  007C8C  100D               	iorwf	_velocidad+2,w,c
   666  007C8E  100E               	iorwf	_velocidad+3,w,c
   667  007C90  A4D8               	btfss	status,2,c
   668  007C92  D008               	goto	l73
   669  007C94  0E82               	movlw	130
   670  007C96  6E01               	movwf	??_secuencial_Efecto3& (0+255),c
   671  007C98  0EDE               	movlw	222
   672  007C9A                     u477:
   673  007C9A  2EE8               	decfsz	wreg,f,c
   674  007C9C  D7FE               	bra	u477
   675  007C9E  2E01               	decfsz	??_secuencial_Efecto3& (0+255),f,c
   676  007CA0  D7FC               	bra	u477
   677  007CA2  D03A               	goto	l79
   678  007CA4                     l73:
   679                           
   680                           ;Secuencia_Main.c: 103: else if(velocidad==2){_delay((unsigned long)((100)*(8000000/4000
      +                          .0)));}
   681  007CA4  0E02               	movlw	2
   682  007CA6  180B               	xorwf	_velocidad,w,c
   683  007CA8  100C               	iorwf	_velocidad+1,w,c
   684  007CAA  100D               	iorwf	_velocidad+2,w,c
   685  007CAC  100E               	iorwf	_velocidad+3,w,c
   686  007CAE  A4D8               	btfss	status,2,c
   687  007CB0  D00D               	goto	l75
   688  007CB2  0E02               	movlw	2
   689  007CB4  6E02               	movwf	(??_secuencial_Efecto3+1)& (0+255),c
   690  007CB6  0E04               	movlw	4
   691  007CB8  6E01               	movwf	??_secuencial_Efecto3& (0+255),c
   692  007CBA  0EBA               	movlw	186
   693  007CBC                     u487:
   694  007CBC  2EE8               	decfsz	wreg,f,c
   695  007CBE  D7FE               	bra	u487
   696  007CC0  2E01               	decfsz	??_secuencial_Efecto3& (0+255),f,c
   697  007CC2  D7FC               	bra	u487
   698  007CC4  2E02               	decfsz	(??_secuencial_Efecto3+1)& (0+255),f,c
   699  007CC6  D7FA               	bra	u487
   700  007CC8  D000               	nop2	
   701  007CCA  D026               	goto	l79
   702  007CCC                     l75:
   703                           
   704                           ;Secuencia_Main.c: 104: else if(velocidad==3){_delay((unsigned long)((200)*(8000000/4000
      +                          .0)));}
   705  007CCC  0E03               	movlw	3
   706  007CCE  180B               	xorwf	_velocidad,w,c
   707  007CD0  100C               	iorwf	_velocidad+1,w,c
   708  007CD2  100D               	iorwf	_velocidad+2,w,c
   709  007CD4  100E               	iorwf	_velocidad+3,w,c
   710  007CD6  A4D8               	btfss	status,2,c
   711  007CD8  D00C               	goto	l77
   712  007CDA  0E03               	movlw	3
   713  007CDC  6E02               	movwf	(??_secuencial_Efecto3+1)& (0+255),c
   714  007CDE  0E08               	movlw	8
   715  007CE0  6E01               	movwf	??_secuencial_Efecto3& (0+255),c
   716  007CE2  0E77               	movlw	119
   717  007CE4                     u497:
   718  007CE4  2EE8               	decfsz	wreg,f,c
   719  007CE6  D7FE               	bra	u497
   720  007CE8  2E01               	decfsz	??_secuencial_Efecto3& (0+255),f,c
   721  007CEA  D7FC               	bra	u497
   722  007CEC  2E02               	decfsz	(??_secuencial_Efecto3+1)& (0+255),f,c
   723  007CEE  D7FA               	bra	u497
   724  007CF0  D012               	goto	L3
   725  007CF2                     l77:
   726                           
   727                           ;Secuencia_Main.c: 105: else if(velocidad==4){_delay((unsigned long)((400)*(8000000/4000
      +                          .0)));}
   728  007CF2  0E04               	movlw	4
   729  007CF4  180B               	xorwf	_velocidad,w,c
   730  007CF6  100C               	iorwf	_velocidad+1,w,c
   731  007CF8  100D               	iorwf	_velocidad+2,w,c
   732  007CFA  100E               	iorwf	_velocidad+3,w,c
   733  007CFC  A4D8               	btfss	status,2,c
   734  007CFE  D00C               	goto	l79
   735  007D00  0E05               	movlw	5
   736  007D02  6E02               	movwf	(??_secuencial_Efecto3+1)& (0+255),c
   737  007D04  0E0F               	movlw	15
   738  007D06  6E01               	movwf	??_secuencial_Efecto3& (0+255),c
   739  007D08  0EF1               	movlw	241
   740  007D0A                     u507:
   741  007D0A  2EE8               	decfsz	wreg,f,c
   742  007D0C  D7FE               	bra	u507
   743  007D0E  2E01               	decfsz	??_secuencial_Efecto3& (0+255),f,c
   744  007D10  D7FC               	bra	u507
   745  007D12  2E02               	decfsz	(??_secuencial_Efecto3+1)& (0+255),f,c
   746  007D14  D7FA               	bra	u507
   747  007D16                     L3:
   748  007D16  F000               	nop	
   749  007D18                     l79:
   750                           
   751                           ;Secuencia_Main.c: 107: if (!PORTBbits.RB6) {
   752  007D18  BC81               	btfsc	3969,6,c	;volatile
   753  007D1A  D01C               	goto	l81
   754                           
   755                           ;Secuencia_Main.c: 108: _delay((unsigned long)((50)*(8000000/4000.0)));
   756  007D1C  0E82               	movlw	130
   757  007D1E  6E01               	movwf	??_secuencial_Efecto3& (0+255),c
   758  007D20  0EDE               	movlw	222
   759  007D22                     u517:
   760  007D22  2EE8               	decfsz	wreg,f,c
   761  007D24  D7FE               	bra	u517
   762  007D26  2E01               	decfsz	??_secuencial_Efecto3& (0+255),f,c
   763  007D28  D7FC               	bra	u517
   764                           
   765                           ;Secuencia_Main.c: 109: if(++velocidad==5){velocidad=1;}
   766  007D2A  0E01               	movlw	1
   767  007D2C  260B               	addwf	_velocidad,f,c
   768  007D2E  0E00               	movlw	0
   769  007D30  220C               	addwfc	_velocidad+1,f,c
   770  007D32  220D               	addwfc	_velocidad+2,f,c
   771  007D34  220E               	addwfc	_velocidad+3,f,c
   772  007D36  0E05               	movlw	5
   773  007D38  180B               	xorwf	_velocidad,w,c
   774  007D3A  100C               	iorwf	_velocidad+1,w,c
   775  007D3C  100D               	iorwf	_velocidad+2,w,c
   776  007D3E  100E               	iorwf	_velocidad+3,w,c
   777  007D40  A4D8               	btfss	status,2,c
   778  007D42  D008               	goto	l81
   779  007D44  0E01               	movlw	1
   780  007D46  6E0B               	movwf	_velocidad,c
   781  007D48  0E00               	movlw	0
   782  007D4A  6E0C               	movwf	_velocidad+1,c
   783  007D4C  0E00               	movlw	0
   784  007D4E  6E0D               	movwf	_velocidad+2,c
   785  007D50  0E00               	movlw	0
   786  007D52  6E0E               	movwf	_velocidad+3,c
   787  007D54                     l81:
   788  007D54  4A03               	infsnz	secuencial_Efecto3@i,f,c
   789  007D56  2A04               	incf	secuencial_Efecto3@i+1,f,c
   790  007D58  BE04               	btfsc	secuencial_Efecto3@i+1,7,c
   791  007D5A  D78A               	goto	l71
   792  007D5C  5004               	movf	secuencial_Efecto3@i+1,w,c
   793  007D5E  E101               	bnz	l82
   794  007D60  D781               	goto	L4
   795  007D62                     l82:
   796  007D62  0012               	return		;funcret
   797  007D64                     __end_of_secuencial_Efecto3:
   798                           	opt stack 0
   799                           tblptru	equ	0xFF8
   800                           tblptrh	equ	0xFF7
   801                           tblptrl	equ	0xFF6
   802                           tablat	equ	0xFF5
   803                           intcon2	equ	0xFF1
   804                           postinc0	equ	0xFEE
   805                           wreg	equ	0xFE8
   806                           postdec1	equ	0xFE5
   807                           fsr1l	equ	0xFE1
   808                           status	equ	0xFD8
   809                           
   810 ;; *************** function _secuencial_Efecto2 *****************
   811 ;; Defined at:
   812 ;;		line 84 in file "Secuencia_Main.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;		None
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  i               2    6[COMRAM] int 
   817 ;;  j               2    4[COMRAM] int 
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		wreg, status,2, status,0
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   827 ;;      Params:         0       0       0       0       0       0       0       0       0
   828 ;;      Locals:         4       0       0       0       0       0       0       0       0
   829 ;;      Temps:          4       0       0       0       0       0       0       0       0
   830 ;;      Totals:         8       0       0       0       0       0       0       0       0
   831 ;;Total ram usage:        8 bytes
   832 ;; Hardware stack levels used:    1
   833 ;; This function calls:
   834 ;;		Nothing
   835 ;; This function is called by:
   836 ;;		_main
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           	psect	text3
   841  007D64                     __ptext3:
   842                           	opt stack 0
   843  007D64                     _secuencial_Efecto2:
   844                           	opt stack 30
   845                           
   846                           ;Secuencia_Main.c: 85: for (int i = 0, j = 7; i < 8; i++, j--) {
   847                           
   848                           ;incstack = 0
   849  007D64  0E00               	movlw	0
   850  007D66  6E08               	movwf	secuencial_Efecto2@i+1,c
   851  007D68  0E00               	movlw	0
   852  007D6A  6E07               	movwf	secuencial_Efecto2@i,c
   853  007D6C  0E00               	movlw	0
   854  007D6E  6E06               	movwf	secuencial_Efecto2@j+1,c
   855  007D70  0E07               	movlw	7
   856  007D72  6E05               	movwf	secuencial_Efecto2@j,c
   857  007D74  BE08               	btfsc	secuencial_Efecto2@i+1,7,c
   858  007D76  D008               	goto	l57
   859  007D78  5008               	movf	secuencial_Efecto2@i+1,w,c
   860  007D7A  E105               	bnz	u100
   861  007D7C  0E08               	movlw	8
   862  007D7E  5C07               	subwf	secuencial_Efecto2@i,w,c
   863  007D80  B0D8               	btfsc	status,0,c
   864  007D82  0012               	return	
   865  007D84  D001               	goto	l57
   866  007D86                     u100:
   867  007D86  0012               	return	
   868  007D88                     l57:
   869                           
   870                           ;Secuencia_Main.c: 86: LATD = (1 << i) + (1 << j);
   871  007D88  C005  F001         	movff	secuencial_Efecto2@j,??_secuencial_Efecto2
   872  007D8C  0E01               	movlw	1
   873  007D8E  6E02               	movwf	(??_secuencial_Efecto2+1)& (0+255),c
   874  007D90  2A01               	incf	??_secuencial_Efecto2,f,c
   875  007D92  D002               	goto	u114
   876  007D94                     u115:
   877  007D94  90D8               	bcf	status,0,c
   878  007D96  3602               	rlcf	??_secuencial_Efecto2+1,f,c
   879  007D98                     u114:
   880  007D98  2E01               	decfsz	??_secuencial_Efecto2,f,c
   881  007D9A  D7FC               	goto	u115
   882  007D9C  C007  F003         	movff	secuencial_Efecto2@i,??_secuencial_Efecto2+2
   883  007DA0  0E01               	movlw	1
   884  007DA2  6E04               	movwf	(??_secuencial_Efecto2+3)& (0+255),c
   885  007DA4  2A03               	incf	??_secuencial_Efecto2+2,f,c
   886  007DA6  D002               	goto	u124
   887  007DA8                     u125:
   888  007DA8  90D8               	bcf	status,0,c
   889  007DAA  3604               	rlcf	??_secuencial_Efecto2+3,f,c
   890  007DAC                     u124:
   891  007DAC  2E03               	decfsz	??_secuencial_Efecto2+2,f,c
   892  007DAE  D7FC               	goto	u125
   893  007DB0  5004               	movf	??_secuencial_Efecto2+3,w,c
   894  007DB2  2402               	addwf	??_secuencial_Efecto2+1,w,c
   895  007DB4  6E8C               	movwf	3980,c	;volatile
   896                           
   897                           ;Secuencia_Main.c: 87: if(velocidad==1){_delay((unsigned long)((50)*(8000000/4000.0)));}
   898  007DB6  040B               	decf	_velocidad,w,c
   899  007DB8  100C               	iorwf	_velocidad+1,w,c
   900  007DBA  100D               	iorwf	_velocidad+2,w,c
   901  007DBC  100E               	iorwf	_velocidad+3,w,c
   902  007DBE  A4D8               	btfss	status,2,c
   903  007DC0  D008               	goto	l59
   904  007DC2  0E82               	movlw	130
   905  007DC4  6E01               	movwf	??_secuencial_Efecto2& (0+255),c
   906  007DC6  0EDE               	movlw	222
   907  007DC8                     u527:
   908  007DC8  2EE8               	decfsz	wreg,f,c
   909  007DCA  D7FE               	bra	u527
   910  007DCC  2E01               	decfsz	??_secuencial_Efecto2& (0+255),f,c
   911  007DCE  D7FC               	bra	u527
   912  007DD0  D03A               	goto	l65
   913  007DD2                     l59:
   914                           
   915                           ;Secuencia_Main.c: 88: else if(velocidad==2){_delay((unsigned long)((100)*(8000000/4000.
      +                          0)));}
   916  007DD2  0E02               	movlw	2
   917  007DD4  180B               	xorwf	_velocidad,w,c
   918  007DD6  100C               	iorwf	_velocidad+1,w,c
   919  007DD8  100D               	iorwf	_velocidad+2,w,c
   920  007DDA  100E               	iorwf	_velocidad+3,w,c
   921  007DDC  A4D8               	btfss	status,2,c
   922  007DDE  D00D               	goto	l61
   923  007DE0  0E02               	movlw	2
   924  007DE2  6E02               	movwf	(??_secuencial_Efecto2+1)& (0+255),c
   925  007DE4  0E04               	movlw	4
   926  007DE6  6E01               	movwf	??_secuencial_Efecto2& (0+255),c
   927  007DE8  0EBA               	movlw	186
   928  007DEA                     u537:
   929  007DEA  2EE8               	decfsz	wreg,f,c
   930  007DEC  D7FE               	bra	u537
   931  007DEE  2E01               	decfsz	??_secuencial_Efecto2& (0+255),f,c
   932  007DF0  D7FC               	bra	u537
   933  007DF2  2E02               	decfsz	(??_secuencial_Efecto2+1)& (0+255),f,c
   934  007DF4  D7FA               	bra	u537
   935  007DF6  D000               	nop2	
   936  007DF8  D026               	goto	l65
   937  007DFA                     l61:
   938                           
   939                           ;Secuencia_Main.c: 89: else if(velocidad==3){_delay((unsigned long)((200)*(8000000/4000.
      +                          0)));}
   940  007DFA  0E03               	movlw	3
   941  007DFC  180B               	xorwf	_velocidad,w,c
   942  007DFE  100C               	iorwf	_velocidad+1,w,c
   943  007E00  100D               	iorwf	_velocidad+2,w,c
   944  007E02  100E               	iorwf	_velocidad+3,w,c
   945  007E04  A4D8               	btfss	status,2,c
   946  007E06  D00C               	goto	l63
   947  007E08  0E03               	movlw	3
   948  007E0A  6E02               	movwf	(??_secuencial_Efecto2+1)& (0+255),c
   949  007E0C  0E08               	movlw	8
   950  007E0E  6E01               	movwf	??_secuencial_Efecto2& (0+255),c
   951  007E10  0E77               	movlw	119
   952  007E12                     u547:
   953  007E12  2EE8               	decfsz	wreg,f,c
   954  007E14  D7FE               	bra	u547
   955  007E16  2E01               	decfsz	??_secuencial_Efecto2& (0+255),f,c
   956  007E18  D7FC               	bra	u547
   957  007E1A  2E02               	decfsz	(??_secuencial_Efecto2+1)& (0+255),f,c
   958  007E1C  D7FA               	bra	u547
   959  007E1E  D012               	goto	L5
   960  007E20                     l63:
   961                           
   962                           ;Secuencia_Main.c: 90: else if(velocidad==4){_delay((unsigned long)((400)*(8000000/4000.
      +                          0)));}
   963  007E20  0E04               	movlw	4
   964  007E22  180B               	xorwf	_velocidad,w,c
   965  007E24  100C               	iorwf	_velocidad+1,w,c
   966  007E26  100D               	iorwf	_velocidad+2,w,c
   967  007E28  100E               	iorwf	_velocidad+3,w,c
   968  007E2A  A4D8               	btfss	status,2,c
   969  007E2C  D00C               	goto	l65
   970  007E2E  0E05               	movlw	5
   971  007E30  6E02               	movwf	(??_secuencial_Efecto2+1)& (0+255),c
   972  007E32  0E0F               	movlw	15
   973  007E34  6E01               	movwf	??_secuencial_Efecto2& (0+255),c
   974  007E36  0EF1               	movlw	241
   975  007E38                     u557:
   976  007E38  2EE8               	decfsz	wreg,f,c
   977  007E3A  D7FE               	bra	u557
   978  007E3C  2E01               	decfsz	??_secuencial_Efecto2& (0+255),f,c
   979  007E3E  D7FC               	bra	u557
   980  007E40  2E02               	decfsz	(??_secuencial_Efecto2+1)& (0+255),f,c
   981  007E42  D7FA               	bra	u557
   982  007E44                     L5:
   983  007E44  F000               	nop	
   984  007E46                     l65:
   985                           
   986                           ;Secuencia_Main.c: 92: if (!PORTBbits.RB6) {
   987  007E46  BC81               	btfsc	3969,6,c	;volatile
   988  007E48  D01C               	goto	l67
   989                           
   990                           ;Secuencia_Main.c: 93: _delay((unsigned long)((50)*(8000000/4000.0)));
   991  007E4A  0E82               	movlw	130
   992  007E4C  6E01               	movwf	??_secuencial_Efecto2& (0+255),c
   993  007E4E  0EDE               	movlw	222
   994  007E50                     u567:
   995  007E50  2EE8               	decfsz	wreg,f,c
   996  007E52  D7FE               	bra	u567
   997  007E54  2E01               	decfsz	??_secuencial_Efecto2& (0+255),f,c
   998  007E56  D7FC               	bra	u567
   999                           
  1000                           ;Secuencia_Main.c: 94: if(++velocidad==5){velocidad=1;}
  1001  007E58  0E01               	movlw	1
  1002  007E5A  260B               	addwf	_velocidad,f,c
  1003  007E5C  0E00               	movlw	0
  1004  007E5E  220C               	addwfc	_velocidad+1,f,c
  1005  007E60  220D               	addwfc	_velocidad+2,f,c
  1006  007E62  220E               	addwfc	_velocidad+3,f,c
  1007  007E64  0E05               	movlw	5
  1008  007E66  180B               	xorwf	_velocidad,w,c
  1009  007E68  100C               	iorwf	_velocidad+1,w,c
  1010  007E6A  100D               	iorwf	_velocidad+2,w,c
  1011  007E6C  100E               	iorwf	_velocidad+3,w,c
  1012  007E6E  A4D8               	btfss	status,2,c
  1013  007E70  D008               	goto	l67
  1014  007E72  0E01               	movlw	1
  1015  007E74  6E0B               	movwf	_velocidad,c
  1016  007E76  0E00               	movlw	0
  1017  007E78  6E0C               	movwf	_velocidad+1,c
  1018  007E7A  0E00               	movlw	0
  1019  007E7C  6E0D               	movwf	_velocidad+2,c
  1020  007E7E  0E00               	movlw	0
  1021  007E80  6E0E               	movwf	_velocidad+3,c
  1022  007E82                     l67:
  1023  007E82  4A07               	infsnz	secuencial_Efecto2@i,f,c
  1024  007E84  2A08               	incf	secuencial_Efecto2@i+1,f,c
  1025  007E86  0605               	decf	secuencial_Efecto2@j,f,c
  1026  007E88  A0D8               	btfss	status,0,c
  1027  007E8A  0606               	decf	secuencial_Efecto2@j+1,f,c
  1028  007E8C  BE08               	btfsc	secuencial_Efecto2@i+1,7,c
  1029  007E8E  D77C               	goto	l57
  1030  007E90  5008               	movf	secuencial_Efecto2@i+1,w,c
  1031  007E92  E101               	bnz	l68
  1032  007E94  D773               	goto	L6
  1033  007E96                     l68:
  1034  007E96  0012               	return		;funcret
  1035  007E98                     __end_of_secuencial_Efecto2:
  1036                           	opt stack 0
  1037                           tblptru	equ	0xFF8
  1038                           tblptrh	equ	0xFF7
  1039                           tblptrl	equ	0xFF6
  1040                           tablat	equ	0xFF5
  1041                           intcon2	equ	0xFF1
  1042                           postinc0	equ	0xFEE
  1043                           wreg	equ	0xFE8
  1044                           postdec1	equ	0xFE5
  1045                           fsr1l	equ	0xFE1
  1046                           status	equ	0xFD8
  1047                           
  1048 ;; *************** function _secuencial_Efecto1 *****************
  1049 ;; Defined at:
  1050 ;;		line 69 in file "Secuencia_Main.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;		None
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;  i               2    2[COMRAM] int 
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  1    wreg      void 
  1057 ;; Registers used:
  1058 ;;		wreg, status,2, status,0
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1064 ;;      Params:         0       0       0       0       0       0       0       0       0
  1065 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1066 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1067 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1068 ;;Total ram usage:        4 bytes
  1069 ;; Hardware stack levels used:    1
  1070 ;; This function calls:
  1071 ;;		Nothing
  1072 ;; This function is called by:
  1073 ;;		_main
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text4
  1078  007B44                     __ptext4:
  1079                           	opt stack 0
  1080  007B44                     _secuencial_Efecto1:
  1081                           	opt stack 30
  1082                           
  1083                           ;Secuencia_Main.c: 70: for (int i = 0; i < 8; i++) {
  1084                           
  1085                           ;incstack = 0
  1086  007B44  0E00               	movlw	0
  1087  007B46  6E04               	movwf	secuencial_Efecto1@i+1,c
  1088  007B48  0E00               	movlw	0
  1089  007B4A  6E03               	movwf	secuencial_Efecto1@i,c
  1090  007B4C  BE04               	btfsc	secuencial_Efecto1@i+1,7,c
  1091  007B4E  D008               	goto	l43
  1092  007B50  5004               	movf	secuencial_Efecto1@i+1,w,c
  1093  007B52  E105               	bnz	u10
  1094  007B54  0E08               	movlw	8
  1095  007B56  5C03               	subwf	secuencial_Efecto1@i,w,c
  1096  007B58  B0D8               	btfsc	status,0,c
  1097  007B5A  0012               	return	
  1098  007B5C  D001               	goto	l43
  1099  007B5E                     u10:
  1100  007B5E  0012               	return	
  1101  007B60                     l43:
  1102                           
  1103                           ;Secuencia_Main.c: 71: LATD = 1 << i;
  1104  007B60  C003  F001         	movff	secuencial_Efecto1@i,??_secuencial_Efecto1
  1105  007B64  0E01               	movlw	1
  1106  007B66  6E02               	movwf	(??_secuencial_Efecto1+1)& (0+255),c
  1107  007B68  2A01               	incf	??_secuencial_Efecto1,f,c
  1108  007B6A  D002               	goto	u24
  1109  007B6C                     u25:
  1110  007B6C  90D8               	bcf	status,0,c
  1111  007B6E  3602               	rlcf	??_secuencial_Efecto1+1,f,c
  1112  007B70                     u24:
  1113  007B70  2E01               	decfsz	??_secuencial_Efecto1,f,c
  1114  007B72  D7FC               	goto	u25
  1115  007B74  5002               	movf	??_secuencial_Efecto1+1,w,c
  1116  007B76  6E8C               	movwf	3980,c	;volatile
  1117                           
  1118                           ;Secuencia_Main.c: 72: if(velocidad==1){_delay((unsigned long)((50)*(8000000/4000.0)));}
  1119  007B78  040B               	decf	_velocidad,w,c
  1120  007B7A  100C               	iorwf	_velocidad+1,w,c
  1121  007B7C  100D               	iorwf	_velocidad+2,w,c
  1122  007B7E  100E               	iorwf	_velocidad+3,w,c
  1123  007B80  A4D8               	btfss	status,2,c
  1124  007B82  D008               	goto	l45
  1125  007B84  0E82               	movlw	130
  1126  007B86  6E01               	movwf	??_secuencial_Efecto1& (0+255),c
  1127  007B88  0EDE               	movlw	222
  1128  007B8A                     u577:
  1129  007B8A  2EE8               	decfsz	wreg,f,c
  1130  007B8C  D7FE               	bra	u577
  1131  007B8E  2E01               	decfsz	??_secuencial_Efecto1& (0+255),f,c
  1132  007B90  D7FC               	bra	u577
  1133  007B92  D03A               	goto	l51
  1134  007B94                     l45:
  1135                           
  1136                           ;Secuencia_Main.c: 73: else if(velocidad==2){_delay((unsigned long)((100)*(8000000/4000.
      +                          0)));}
  1137  007B94  0E02               	movlw	2
  1138  007B96  180B               	xorwf	_velocidad,w,c
  1139  007B98  100C               	iorwf	_velocidad+1,w,c
  1140  007B9A  100D               	iorwf	_velocidad+2,w,c
  1141  007B9C  100E               	iorwf	_velocidad+3,w,c
  1142  007B9E  A4D8               	btfss	status,2,c
  1143  007BA0  D00D               	goto	l47
  1144  007BA2  0E02               	movlw	2
  1145  007BA4  6E02               	movwf	(??_secuencial_Efecto1+1)& (0+255),c
  1146  007BA6  0E04               	movlw	4
  1147  007BA8  6E01               	movwf	??_secuencial_Efecto1& (0+255),c
  1148  007BAA  0EBA               	movlw	186
  1149  007BAC                     u587:
  1150  007BAC  2EE8               	decfsz	wreg,f,c
  1151  007BAE  D7FE               	bra	u587
  1152  007BB0  2E01               	decfsz	??_secuencial_Efecto1& (0+255),f,c
  1153  007BB2  D7FC               	bra	u587
  1154  007BB4  2E02               	decfsz	(??_secuencial_Efecto1+1)& (0+255),f,c
  1155  007BB6  D7FA               	bra	u587
  1156  007BB8  D000               	nop2	
  1157  007BBA  D026               	goto	l51
  1158  007BBC                     l47:
  1159                           
  1160                           ;Secuencia_Main.c: 74: else if(velocidad==3){_delay((unsigned long)((200)*(8000000/4000.
      +                          0)));}
  1161  007BBC  0E03               	movlw	3
  1162  007BBE  180B               	xorwf	_velocidad,w,c
  1163  007BC0  100C               	iorwf	_velocidad+1,w,c
  1164  007BC2  100D               	iorwf	_velocidad+2,w,c
  1165  007BC4  100E               	iorwf	_velocidad+3,w,c
  1166  007BC6  A4D8               	btfss	status,2,c
  1167  007BC8  D00C               	goto	l49
  1168  007BCA  0E03               	movlw	3
  1169  007BCC  6E02               	movwf	(??_secuencial_Efecto1+1)& (0+255),c
  1170  007BCE  0E08               	movlw	8
  1171  007BD0  6E01               	movwf	??_secuencial_Efecto1& (0+255),c
  1172  007BD2  0E77               	movlw	119
  1173  007BD4                     u597:
  1174  007BD4  2EE8               	decfsz	wreg,f,c
  1175  007BD6  D7FE               	bra	u597
  1176  007BD8  2E01               	decfsz	??_secuencial_Efecto1& (0+255),f,c
  1177  007BDA  D7FC               	bra	u597
  1178  007BDC  2E02               	decfsz	(??_secuencial_Efecto1+1)& (0+255),f,c
  1179  007BDE  D7FA               	bra	u597
  1180  007BE0  D012               	goto	L7
  1181  007BE2                     l49:
  1182                           
  1183                           ;Secuencia_Main.c: 75: else if(velocidad==4){_delay((unsigned long)((400)*(8000000/4000.
      +                          0)));}
  1184  007BE2  0E04               	movlw	4
  1185  007BE4  180B               	xorwf	_velocidad,w,c
  1186  007BE6  100C               	iorwf	_velocidad+1,w,c
  1187  007BE8  100D               	iorwf	_velocidad+2,w,c
  1188  007BEA  100E               	iorwf	_velocidad+3,w,c
  1189  007BEC  A4D8               	btfss	status,2,c
  1190  007BEE  D00C               	goto	l51
  1191  007BF0  0E05               	movlw	5
  1192  007BF2  6E02               	movwf	(??_secuencial_Efecto1+1)& (0+255),c
  1193  007BF4  0E0F               	movlw	15
  1194  007BF6  6E01               	movwf	??_secuencial_Efecto1& (0+255),c
  1195  007BF8  0EF1               	movlw	241
  1196  007BFA                     u607:
  1197  007BFA  2EE8               	decfsz	wreg,f,c
  1198  007BFC  D7FE               	bra	u607
  1199  007BFE  2E01               	decfsz	??_secuencial_Efecto1& (0+255),f,c
  1200  007C00  D7FC               	bra	u607
  1201  007C02  2E02               	decfsz	(??_secuencial_Efecto1+1)& (0+255),f,c
  1202  007C04  D7FA               	bra	u607
  1203  007C06                     L7:
  1204  007C06  F000               	nop	
  1205  007C08                     l51:
  1206                           
  1207                           ;Secuencia_Main.c: 77: if (!PORTBbits.RB6) {
  1208  007C08  BC81               	btfsc	3969,6,c	;volatile
  1209  007C0A  D01C               	goto	l53
  1210                           
  1211                           ;Secuencia_Main.c: 78: _delay((unsigned long)((50)*(8000000/4000.0)));
  1212  007C0C  0E82               	movlw	130
  1213  007C0E  6E01               	movwf	??_secuencial_Efecto1& (0+255),c
  1214  007C10  0EDE               	movlw	222
  1215  007C12                     u617:
  1216  007C12  2EE8               	decfsz	wreg,f,c
  1217  007C14  D7FE               	bra	u617
  1218  007C16  2E01               	decfsz	??_secuencial_Efecto1& (0+255),f,c
  1219  007C18  D7FC               	bra	u617
  1220                           
  1221                           ;Secuencia_Main.c: 79: if(++velocidad==5){velocidad=1;}
  1222  007C1A  0E01               	movlw	1
  1223  007C1C  260B               	addwf	_velocidad,f,c
  1224  007C1E  0E00               	movlw	0
  1225  007C20  220C               	addwfc	_velocidad+1,f,c
  1226  007C22  220D               	addwfc	_velocidad+2,f,c
  1227  007C24  220E               	addwfc	_velocidad+3,f,c
  1228  007C26  0E05               	movlw	5
  1229  007C28  180B               	xorwf	_velocidad,w,c
  1230  007C2A  100C               	iorwf	_velocidad+1,w,c
  1231  007C2C  100D               	iorwf	_velocidad+2,w,c
  1232  007C2E  100E               	iorwf	_velocidad+3,w,c
  1233  007C30  A4D8               	btfss	status,2,c
  1234  007C32  D008               	goto	l53
  1235  007C34  0E01               	movlw	1
  1236  007C36  6E0B               	movwf	_velocidad,c
  1237  007C38  0E00               	movlw	0
  1238  007C3A  6E0C               	movwf	_velocidad+1,c
  1239  007C3C  0E00               	movlw	0
  1240  007C3E  6E0D               	movwf	_velocidad+2,c
  1241  007C40  0E00               	movlw	0
  1242  007C42  6E0E               	movwf	_velocidad+3,c
  1243  007C44                     l53:
  1244  007C44  4A03               	infsnz	secuencial_Efecto1@i,f,c
  1245  007C46  2A04               	incf	secuencial_Efecto1@i+1,f,c
  1246  007C48  BE04               	btfsc	secuencial_Efecto1@i+1,7,c
  1247  007C4A  D78A               	goto	l43
  1248  007C4C  5004               	movf	secuencial_Efecto1@i+1,w,c
  1249  007C4E  E101               	bnz	l54
  1250  007C50  D781               	goto	L8
  1251  007C52                     l54:
  1252  007C52  0012               	return		;funcret
  1253  007C54                     __end_of_secuencial_Efecto1:
  1254                           	opt stack 0
  1255  0000                     tblptru	equ	0xFF8
  1256                           tblptrh	equ	0xFF7
  1257                           tblptrl	equ	0xFF6
  1258                           tablat	equ	0xFF5
  1259                           intcon2	equ	0xFF1
  1260                           postinc0	equ	0xFEE
  1261                           wreg	equ	0xFE8
  1262                           postdec1	equ	0xFE5
  1263                           fsr1l	equ	0xFE1
  1264                           status	equ	0xFD8
  1265                           tblptru	equ	0xFF8
  1266                           tblptrh	equ	0xFF7
  1267                           tblptrl	equ	0xFF6
  1268                           tablat	equ	0xFF5
  1269                           intcon2	equ	0xFF1
  1270                           postinc0	equ	0xFEE
  1271                           wreg	equ	0xFE8
  1272                           postdec1	equ	0xFE5
  1273                           fsr1l	equ	0xFE1
  1274                           status	equ	0xFD8
  1275                           
  1276                           	psect	rparam
  1277  0000                     tblptru	equ	0xFF8
  1278                           tblptrh	equ	0xFF7
  1279                           tblptrl	equ	0xFF6
  1280                           tablat	equ	0xFF5
  1281                           intcon2	equ	0xFF1
  1282                           postinc0	equ	0xFEE
  1283                           wreg	equ	0xFE8
  1284                           postdec1	equ	0xFE5
  1285                           fsr1l	equ	0xFE1
  1286                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      15
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_secuencial_Efecto4

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     240
                                              9 COMRAM     1     1      0
                 _secuencial_Efecto1
                 _secuencial_Efecto2
                 _secuencial_Efecto3
                 _secuencial_Efecto4
 ---------------------------------------------------------------------------------
 (1) _secuencial_Efecto4                                   9     9      0      90
                                              0 COMRAM     9     9      0
 ---------------------------------------------------------------------------------
 (1) _secuencial_Efecto3                                   4     4      0      45
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _secuencial_Efecto2                                   8     8      0      60
                                              0 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (1) _secuencial_Efecto1                                   4     4      0      45
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _secuencial_Efecto1
   _secuencial_Efecto2
   _secuencial_Efecto3
   _secuencial_Efecto4

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A       F       1       15.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       F      20        0.0%
DATA                 0      0       F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Thu Nov 19 22:01:37 2020

                         l32 7B28                           l33 7B10                           l51 7C08  
                         l43 7B60                           l35 7B16                           l36 7B1C  
                         l53 7C44                           l45 7B94                           l61 7DFA  
                         l37 7B22                           l29 7AEE                           l54 7C52  
                         l47 7BBC                           l63 7E20                           l71 7C70  
                         l49 7BE2                           l65 7E46                           l57 7D88  
                         l81 7D54                           l73 7CA4                           l82 7D62  
                         l67 7E82                           l59 7DD2                           l75 7CCC  
                         l91 7F8E                           l68 7E96                           l77 7CF2  
                         l93 7FB4                           l85 7EC4                           l79 7D18  
                         l95 7FF0                           l87 7F40                           l96 7FFE  
                         l89 7F68                           u10 7B5E                           u24 7B70  
                         u25 7B6C                  __CFG_BOR$ON 000000                  __CFG_BORV$3 000000  
               __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
               __CFG_CP3$OFF 000000                 __CFG_CPB$OFF 000000                          u100 7D86  
                        u200 7C6E                          u114 7D98                          u115 7D94  
                        u124 7DAC                          u125 7DA8                          u214 7C80  
                        u215 7C7C                          u304 7EE0                          u305 7EDA  
                        u314 7F10                          u315 7F0A                          u417 7AF8  
                        u290 7EC2                 __CFG_CPD$OFF 000000                          u507 7D0A  
                        u427 7F36                          u517 7D22                          u437 7F58  
                        u607 7BFA                          u527 7DC8                          u447 7F80  
                        u617 7C12                          u537 7DEA                          u457 7FA6  
                        u547 7E12                          u467 7FBE                          u557 7E38  
                        u477 7C9A                          u567 7E50                          u487 7CBC  
                        u577 7B8A                          u497 7CE4                          u587 7BAC  
                        u597 7BD4                          wreg 000FE8                 __CFG_LVP$OFF 000000  
               __CFG_WDT$OFF 000000                         _LATD 000F8C                         _main 7AE0  
                       fsr1l 000FE1                         start 0000                __CFG_IESO$OFF 000000  
              __CFG_MCLRE$ON 000000                 ___param_bank 000000               __CFG_CCP2MX$ON 000000  
                      ?_main 0001                        _TRISD 000F95                __CFG_PWRT$OFF 000000  
              __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000  
              __CFG_WRT3$OFF 000000               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000  
              __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000  
             __CFG_EBTRB$OFF 000000                        tablat 000FF5                        status 000FD8  
             __CFG_ICPRT$OFF 000000              __initialization 7AB6                 __end_of_main 7B44  
                     ??_main 000A                __activetblptr 000002               __CFG_XINST$OFF 000000  
             __CFG_STVREN$ON 000000                       _efecto 000F   __end_of_secuencial_Efecto1 7C54  
 __end_of_secuencial_Efecto2 7E98   __end_of_secuencial_Efecto3 7D64   __end_of_secuencial_Efecto4 8000  
               __pdataCOMRAM 000B                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8                   __accesstop 0060      __end_of__initialization 7AD6  
            __CFG_PBADEN$OFF 000000                ___rparam_used 000001               __pcstackCOMRAM 0001  
        secuencial_Efecto1@i 0003          secuencial_Efecto2@i 0007          secuencial_Efecto2@j 0005  
        secuencial_Efecto3@i 0003          secuencial_Efecto4@i 0004          secuencial_Efecto4@m 0006  
        secuencial_Efecto4@n 0008              __CFG_VREGEN$OFF 000000                      __Hparam 0000  
                    __Lparam 0000                      __pcinit 7AB6                      __ramtop 0800  
                    __ptext0 7AE0                      __ptext1 7E98                      __ptext2 7C54  
                    __ptext3 7D64                      __ptext4 7B44         end_of_initialization 7AD6  
              __Lmediumconst 0000                      postdec1 000FE5                      postinc0 000FEE  
                  _PORTBbits 000F81                    _TRISBbits 000F93           _secuencial_Efecto1 7B44  
         _secuencial_Efecto2 7D64           _secuencial_Efecto3 7C54           _secuencial_Efecto4 7E98  
        ?_secuencial_Efecto1 0001          ?_secuencial_Efecto2 0001          ?_secuencial_Efecto3 0001  
        ?_secuencial_Efecto4 0001                __pidataCOMRAM 7AB1         ??_secuencial_Efecto1 0001  
       ??_secuencial_Efecto2 0001         ??_secuencial_Efecto3 0001         ??_secuencial_Efecto4 0001  
        start_initialization 7AB6             __CFG_LPT1OSC$OFF 000000             __CFG_WDTPS$32768 000000  
                  _velocidad 000B                  _INTCON2bits 000FF1                    copy_data0 7ACA  
                   __Hrparam 0000                     __Lrparam 0000                __size_of_main 0064  
__size_of_secuencial_Efecto1 0110  __size_of_secuencial_Efecto2 0134  __size_of_secuencial_Efecto3 0110  
__size_of_secuencial_Efecto4 0168          __CFG_FOSC$INTOSC_EC 000000  
