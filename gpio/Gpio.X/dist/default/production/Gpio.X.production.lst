

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Fri Nov 20 13:51:09 2020

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17  0000                     
    18                           ; Version 1.44
    19                           ; Generated 14/09/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	idataCOMRAM
    54  007D37                     __pidataCOMRAM:
    55                           	opt stack 0
    56                           
    57                           ;initializer for _velocidad
    58  007D37  0001               	dw	1
    59  007D39  0000               	dw	0
    60                           
    61                           ;initializer for _efecto
    62  007D3B  01                 	db	1
    63  0000                     _PORTBbits	set	3969
    64  0000                     _INTCON2bits	set	4081
    65  0000                     _TRISBbits	set	3987
    66  0000                     _LATD	set	3980
    67  0000                     _TRISD	set	3989
    68                           
    69                           ; #config settings
    70  0000                     
    71                           	psect	cinit
    72  007D3C                     __pcinit:
    73                           	opt stack 0
    74  007D3C                     start_initialization:
    75                           	opt stack 0
    76  007D3C                     __initialization:
    77                           	opt stack 0
    78                           
    79                           ; Initialize objects allocated to COMRAM (5 bytes)
    80                           ; load TBLPTR registers with __pidataCOMRAM
    81  007D3C  0E37               	movlw	low __pidataCOMRAM
    82  007D3E  6EF6               	movwf	tblptrl,c
    83  007D40  0E7D               	movlw	high __pidataCOMRAM
    84  007D42  6EF7               	movwf	tblptrh,c
    85  007D44  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    86  007D46  6EF8               	movwf	tblptru,c
    87  007D48  EE00  F00F         	lfsr	0,__pdataCOMRAM
    88  007D4C  EE10 F005          	lfsr	1,5
    89  007D50                     copy_data0:
    90  007D50  0009               	tblrd		*+
    91  007D52  CFF5 FFEE          	movff	tablat,postinc0
    92  007D56  50E5               	movf	postdec1,w,c
    93  007D58  50E1               	movf	fsr1l,w,c
    94  007D5A  E1FA               	bnz	copy_data0
    95  007D5C                     end_of_initialization:
    96                           	opt stack 0
    97  007D5C                     __end_of__initialization:
    98                           	opt stack 0
    99  007D5C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   100  007D5E  6EF8               	movwf	tblptru,c
   101  007D60  0100               	movlb	0
   102  007D62  EFF7  F03E         	goto	_main	;jump to C main() function
   103                           tblptru	equ	0xFF8
   104                           tblptrh	equ	0xFF7
   105                           tblptrl	equ	0xFF6
   106                           tablat	equ	0xFF5
   107                           postinc0	equ	0xFEE
   108                           postdec1	equ	0xFE5
   109                           fsr1l	equ	0xFE1
   110                           
   111                           	psect	dataCOMRAM
   112  00000F                     __pdataCOMRAM:
   113                           	opt stack 0
   114  00000F                     _velocidad:
   115                           	opt stack 0
   116  00000F                     	ds	4
   117  000013                     _efecto:
   118                           	opt stack 0
   119  000013                     	ds	1
   120                           tblptru	equ	0xFF8
   121                           tblptrh	equ	0xFF7
   122                           tblptrl	equ	0xFF6
   123                           tablat	equ	0xFF5
   124                           postinc0	equ	0xFEE
   125                           postdec1	equ	0xFE5
   126                           fsr1l	equ	0xFE1
   127                           
   128                           	psect	cstackCOMRAM
   129  000001                     __pcstackCOMRAM:
   130                           	opt stack 0
   131  000001                     velocidad_efecto@p_velocidad:
   132                           	opt stack 0
   133                           
   134                           ; 2 bytes @ 0x0
   135  000001                     	ds	2
   136  000003                     ??_velocidad_efecto:
   137                           
   138                           ; 1 bytes @ 0x2
   139  000003                     	ds	2
   140  000005                     ??_secuencial_Efecto1:
   141  000005                     ??_secuencial_Efecto2:
   142  000005                     ??_secuencial_Efecto3:
   143  000005                     ??_secuencial_Efecto4:
   144                           
   145                           ; 1 bytes @ 0x4
   146  000005                     	ds	2
   147  000007                     secuencial_Efecto1@i:
   148                           	opt stack 0
   149  000007                     secuencial_Efecto3@i:
   150                           	opt stack 0
   151                           
   152                           ; 2 bytes @ 0x6
   153  000007                     	ds	1
   154  000008                     secuencial_Efecto4@i:
   155                           	opt stack 0
   156                           
   157                           ; 2 bytes @ 0x7
   158  000008                     	ds	1
   159  000009                     secuencial_Efecto2@j:
   160                           	opt stack 0
   161                           
   162                           ; 2 bytes @ 0x8
   163  000009                     	ds	1
   164  00000A                     secuencial_Efecto4@m:
   165                           	opt stack 0
   166                           
   167                           ; 2 bytes @ 0x9
   168  00000A                     	ds	1
   169  00000B                     secuencial_Efecto2@i:
   170                           	opt stack 0
   171                           
   172                           ; 2 bytes @ 0xA
   173  00000B                     	ds	1
   174  00000C                     secuencial_Efecto4@n:
   175                           	opt stack 0
   176                           
   177                           ; 2 bytes @ 0xB
   178  00000C                     	ds	2
   179  00000E                     ??_main:
   180                           
   181                           ; 1 bytes @ 0xD
   182  00000E                     	ds	1
   183                           tblptru	equ	0xFF8
   184                           tblptrh	equ	0xFF7
   185                           tblptrl	equ	0xFF6
   186                           tablat	equ	0xFF5
   187                           postinc0	equ	0xFEE
   188                           postdec1	equ	0xFE5
   189                           fsr1l	equ	0xFE1
   190                           
   191 ;;
   192 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   193 ;;
   194 ;; *************** function _main *****************
   195 ;; Defined at:
   196 ;;		line 33 in file "Secuencia_Main.c"
   197 ;; Parameters:    Size  Location     Type
   198 ;;		None
   199 ;; Auto vars:     Size  Location     Type
   200 ;;		None
   201 ;; Return value:  Size  Location     Type
   202 ;;                  2   30[None  ] int 
   203 ;; Registers used:
   204 ;;		wreg, status,2, status,0, cstack
   205 ;; Tracked objects:
   206 ;;		On entry : 0/0
   207 ;;		On exit  : 0/0
   208 ;;		Unchanged: 0/0
   209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   210 ;;      Params:         0       0       0       0       0       0       0       0       0
   211 ;;      Locals:         0       0       0       0       0       0       0       0       0
   212 ;;      Temps:          1       0       0       0       0       0       0       0       0
   213 ;;      Totals:         1       0       0       0       0       0       0       0       0
   214 ;;Total ram usage:        1 bytes
   215 ;; Hardware stack levels required when called:    2
   216 ;; This function calls:
   217 ;;		_secuencial_Efecto1
   218 ;;		_secuencial_Efecto2
   219 ;;		_secuencial_Efecto3
   220 ;;		_secuencial_Efecto4
   221 ;; This function is called by:
   222 ;;		Startup code after reset
   223 ;; This function uses a non-reentrant model
   224 ;;
   225                           
   226                           	psect	text0
   227  007DEE                     __ptext0:
   228                           	opt stack 0
   229  007DEE                     _main:
   230                           	opt stack 29
   231                           
   232                           ;Secuencia_Main.c: 34: TRISD = 0;
   233                           
   234                           ;incstack = 0
   235  007DEE  0E00               	movlw	0
   236  007DF0  6E95               	movwf	3989,c	;volatile
   237                           
   238                           ;Secuencia_Main.c: 35: LATD = 0;
   239  007DF2  0E00               	movlw	0
   240  007DF4  6E8C               	movwf	3980,c	;volatile
   241                           
   242                           ;Secuencia_Main.c: 36: TRISBbits.TRISB7 = 1;
   243  007DF6  8E93               	bsf	3987,7,c	;volatile
   244                           
   245                           ;Secuencia_Main.c: 37: TRISBbits.TRISB6 = 1;
   246  007DF8  8C93               	bsf	3987,6,c	;volatile
   247                           
   248                           ;Secuencia_Main.c: 38: INTCON2bits.RBPU = 0;
   249  007DFA  9EF1               	bcf	intcon2,7,c	;volatile
   250  007DFC                     
   251                           ;Secuencia_Main.c: 41: if (!PORTBbits.RB7) {
   252  007DFC  BE81               	btfsc	3969,7,c	;volatile
   253  007DFE  D01B               	goto	l34
   254                           
   255                           ;Secuencia_Main.c: 42: _delay((unsigned long)((50)*(8000000/4000.0)));
   256  007E00  0E82               	movlw	130
   257  007E02  6E0E               	movwf	??_main& (0+255),c
   258  007E04  0EDE               	movlw	222
   259  007E06                     u457:
   260  007E06  2EE8               	decfsz	wreg,f,c
   261  007E08  D7FE               	bra	u457
   262  007E0A  2E0E               	decfsz	??_main& (0+255),f,c
   263  007E0C  D7FC               	bra	u457
   264                           
   265                           ;Secuencia_Main.c: 43: if(++efecto==5){efecto=1;}
   266  007E0E  2A13               	incf	_efecto,f,c
   267  007E10  0E05               	movlw	5
   268  007E12  1813               	xorwf	_efecto,w,c
   269  007E14  A4D8               	btfss	status,2,c
   270  007E16  D00F               	goto	l34
   271  007E18  0E01               	movlw	1
   272  007E1A  6E13               	movwf	_efecto,c
   273                           
   274                           ;Secuencia_Main.c: 44: }
   275                           ;Secuencia_Main.c: 46: switch (efecto) {
   276  007E1C  D00C               	goto	l34
   277  007E1E  ECB3  F03E         	call	_secuencial_Efecto1	;wreg free
   278                           
   279                           ;Secuencia_Main.c: 48: break;
   280  007E22  D7EC               	goto	l31
   281  007E24  EC29  F03F         	call	_secuencial_Efecto2	;wreg free
   282                           
   283                           ;Secuencia_Main.c: 50: break;
   284  007E28  D7E9               	goto	l31
   285  007E2A  ECD5  F03E         	call	_secuencial_Efecto3	;wreg free
   286                           
   287                           ;Secuencia_Main.c: 52: break;
   288  007E2E  D7E6               	goto	l31
   289  007E30  EC5D  F03F         	call	_secuencial_Efecto4	;wreg free
   290                           
   291                           ;Secuencia_Main.c: 55: }
   292                           
   293                           ;Secuencia_Main.c: 54: break;
   294  007E34  D7E3               	goto	l31
   295  007E36                     l34:
   296  007E36  5013               	movf	_efecto,w,c
   297                           
   298                           ; Switch size 1, requested type "space"
   299                           ; Number of cases is 4, Range of values is 1 to 4
   300                           ; switch strategies available:
   301                           ; Name         Instructions Cycles
   302                           ; simple_byte           13     7 (average)
   303                           ;	Chosen strategy is simple_byte
   304  007E38  0A01               	xorlw	1	; case 1
   305  007E3A  B4D8               	btfsc	status,2,c
   306  007E3C  D7F0               	goto	l35
   307  007E3E  0A03               	xorlw	3	; case 2
   308  007E40  B4D8               	btfsc	status,2,c
   309  007E42  D7F0               	goto	l37
   310  007E44  0A01               	xorlw	1	; case 3
   311  007E46  B4D8               	btfsc	status,2,c
   312  007E48  D7F0               	goto	l38
   313  007E4A  0A07               	xorlw	7	; case 4
   314  007E4C  B4D8               	btfsc	status,2,c
   315  007E4E  D7F0               	goto	l39
   316  007E50  D7D5               	goto	l31
   317  007E52                     __end_of_main:
   318                           	opt stack 0
   319                           tblptru	equ	0xFF8
   320                           tblptrh	equ	0xFF7
   321                           tblptrl	equ	0xFF6
   322                           tablat	equ	0xFF5
   323                           intcon2	equ	0xFF1
   324                           postinc0	equ	0xFEE
   325                           wreg	equ	0xFE8
   326                           postdec1	equ	0xFE5
   327                           fsr1l	equ	0xFE1
   328                           status	equ	0xFD8
   329                           
   330 ;; *************** function _secuencial_Efecto4 *****************
   331 ;; Defined at:
   332 ;;		line 109 in file "Secuencia_Main.c"
   333 ;; Parameters:    Size  Location     Type
   334 ;;		None
   335 ;; Auto vars:     Size  Location     Type
   336 ;;  i               2    7[COMRAM] int 
   337 ;;  n               2   11[COMRAM] volatile unsigned int 
   338 ;;  m               2    9[COMRAM] volatile unsigned int 
   339 ;; Return value:  Size  Location     Type
   340 ;;                  1    wreg      void 
   341 ;; Registers used:
   342 ;;		wreg, status,2, status,0, cstack
   343 ;; Tracked objects:
   344 ;;		On entry : 0/0
   345 ;;		On exit  : 0/0
   346 ;;		Unchanged: 0/0
   347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   348 ;;      Params:         0       0       0       0       0       0       0       0       0
   349 ;;      Locals:         6       0       0       0       0       0       0       0       0
   350 ;;      Temps:          3       0       0       0       0       0       0       0       0
   351 ;;      Totals:         9       0       0       0       0       0       0       0       0
   352 ;;Total ram usage:        9 bytes
   353 ;; Hardware stack levels used:    1
   354 ;; Hardware stack levels required when called:    1
   355 ;; This function calls:
   356 ;;		_velocidad_efecto
   357 ;; This function is called by:
   358 ;;		_main
   359 ;; This function uses a non-reentrant model
   360 ;;
   361                           
   362                           	psect	text1
   363  007EBA                     __ptext1:
   364                           	opt stack 0
   365  007EBA                     _secuencial_Efecto4:
   366                           	opt stack 29
   367                           
   368                           ;Secuencia_Main.c: 110: volatile unsigned int m=0,n=0;
   369                           
   370                           ;incstack = 0
   371  007EBA  0E00               	movlw	0
   372  007EBC  6E0B               	movwf	secuencial_Efecto4@m+1,c	;volatile
   373  007EBE  0E00               	movlw	0
   374  007EC0  6E0A               	movwf	secuencial_Efecto4@m,c	;volatile
   375  007EC2  0E00               	movlw	0
   376  007EC4  6E0D               	movwf	secuencial_Efecto4@n+1,c	;volatile
   377  007EC6  0E00               	movlw	0
   378  007EC8  6E0C               	movwf	secuencial_Efecto4@n,c	;volatile
   379                           
   380                           ;Secuencia_Main.c: 111: for (int i = 0; i < 5; i++) {
   381  007ECA  0E00               	movlw	0
   382  007ECC  6E09               	movwf	secuencial_Efecto4@i+1,c
   383  007ECE  0E00               	movlw	0
   384  007ED0  6E08               	movwf	secuencial_Efecto4@i,c
   385  007ED2                     l876:
   386  007ED2  BE09               	btfsc	secuencial_Efecto4@i+1,7,c
   387  007ED4  D006               	goto	l60
   388  007ED6  5009               	movf	secuencial_Efecto4@i+1,w,c
   389  007ED8  E13D               	bnz	l62
   390  007EDA  0E05               	movlw	5
   391  007EDC  5C08               	subwf	secuencial_Efecto4@i,w,c
   392  007EDE  B0D8               	btfsc	status,0,c
   393  007EE0  0012               	return	
   394  007EE2                     l60:
   395                           
   396                           ;Secuencia_Main.c: 112: LATD = m+n;
   397  007EE2  500A               	movf	secuencial_Efecto4@m,w,c	;volatile
   398  007EE4  240C               	addwf	secuencial_Efecto4@n,w,c	;volatile
   399  007EE6  6E8C               	movwf	3980,c	;volatile
   400                           
   401                           ;Secuencia_Main.c: 113: m += (1 << i) & 0x0f;
   402  007EE8  C008  F005         	movff	secuencial_Efecto4@i,??_secuencial_Efecto4
   403  007EEC  0E01               	movlw	1
   404  007EEE  6E06               	movwf	(??_secuencial_Efecto4+1)& (0+255),c
   405  007EF0  0E00               	movlw	0
   406  007EF2  6E07               	movwf	(??_secuencial_Efecto4+2)& (0+255),c
   407  007EF4  2A05               	incf	??_secuencial_Efecto4,f,c
   408  007EF6  D003               	goto	u404
   409  007EF8                     u405:
   410  007EF8  90D8               	bcf	status,0,c
   411  007EFA  3606               	rlcf	??_secuencial_Efecto4+1,f,c
   412  007EFC  3607               	rlcf	??_secuencial_Efecto4+2,f,c
   413  007EFE                     u404:
   414  007EFE  2E05               	decfsz	??_secuencial_Efecto4,f,c
   415  007F00  D7FB               	goto	u405
   416  007F02  0E0F               	movlw	15
   417  007F04  1606               	andwf	??_secuencial_Efecto4+1,f,c
   418  007F06  0E00               	movlw	0
   419  007F08  1607               	andwf	??_secuencial_Efecto4+2,f,c
   420  007F0A  5006               	movf	??_secuencial_Efecto4+1,w,c
   421  007F0C  260A               	addwf	secuencial_Efecto4@m,f,c	;volatile
   422  007F0E  5007               	movf	??_secuencial_Efecto4+2,w,c
   423  007F10  220B               	addwfc	secuencial_Efecto4@m+1,f,c	;volatile
   424                           
   425                           ;Secuencia_Main.c: 114: n += (1 << (7-i)) & 0xf0;
   426  007F12  5008               	movf	secuencial_Efecto4@i,w,c
   427  007F14  0800               	sublw	0
   428  007F16  6E05               	movwf	??_secuencial_Efecto4& (0+255),c
   429  007F18  0E07               	movlw	7
   430  007F1A  2605               	addwf	??_secuencial_Efecto4,f,c
   431  007F1C  0E01               	movlw	1
   432  007F1E  6E06               	movwf	(??_secuencial_Efecto4+1)& (0+255),c
   433  007F20  0E00               	movlw	0
   434  007F22  6E07               	movwf	(??_secuencial_Efecto4+2)& (0+255),c
   435  007F24  2A05               	incf	??_secuencial_Efecto4,f,c
   436  007F26  D003               	goto	u414
   437  007F28                     u415:
   438  007F28  90D8               	bcf	status,0,c
   439  007F2A  3606               	rlcf	??_secuencial_Efecto4+1,f,c
   440  007F2C  3607               	rlcf	??_secuencial_Efecto4+2,f,c
   441  007F2E                     u414:
   442  007F2E  2E05               	decfsz	??_secuencial_Efecto4,f,c
   443  007F30  D7FB               	goto	u415
   444  007F32  0EF0               	movlw	240
   445  007F34  1606               	andwf	??_secuencial_Efecto4+1,f,c
   446  007F36  0E00               	movlw	0
   447  007F38  1607               	andwf	??_secuencial_Efecto4+2,f,c
   448  007F3A  5006               	movf	??_secuencial_Efecto4+1,w,c
   449  007F3C  260C               	addwf	secuencial_Efecto4@n,f,c	;volatile
   450  007F3E  5007               	movf	??_secuencial_Efecto4+2,w,c
   451  007F40  220D               	addwfc	secuencial_Efecto4@n+1,f,c	;volatile
   452                           
   453                           ;Secuencia_Main.c: 115: velocidad_efecto(velocidad);
   454  007F42  C00F  F001         	movff	_velocidad,velocidad_efecto@p_velocidad
   455  007F46  C010  F002         	movff	_velocidad+1,velocidad_efecto@p_velocidad+1
   456  007F4A  ECAB  F03F         	call	_velocidad_efecto	;wreg free
   457  007F4E  4A08               	infsnz	secuencial_Efecto4@i,f,c
   458  007F50  2A09               	incf	secuencial_Efecto4@i+1,f,c
   459  007F52  D7BF               	goto	l876
   460  007F54                     l62:
   461  007F54  0012               	return		;funcret
   462  007F56                     __end_of_secuencial_Efecto4:
   463                           	opt stack 0
   464                           tblptru	equ	0xFF8
   465                           tblptrh	equ	0xFF7
   466                           tblptrl	equ	0xFF6
   467                           tablat	equ	0xFF5
   468                           intcon2	equ	0xFF1
   469                           postinc0	equ	0xFEE
   470                           wreg	equ	0xFE8
   471                           postdec1	equ	0xFE5
   472                           fsr1l	equ	0xFE1
   473                           status	equ	0xFD8
   474                           
   475 ;; *************** function _secuencial_Efecto3 *****************
   476 ;; Defined at:
   477 ;;		line 92 in file "Secuencia_Main.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;  i               2    6[COMRAM] int 
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, status,2, status,0, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   491 ;;      Params:         0       0       0       0       0       0       0       0       0
   492 ;;      Locals:         2       0       0       0       0       0       0       0       0
   493 ;;      Temps:          2       0       0       0       0       0       0       0       0
   494 ;;      Totals:         4       0       0       0       0       0       0       0       0
   495 ;;Total ram usage:        4 bytes
   496 ;; Hardware stack levels used:    1
   497 ;; Hardware stack levels required when called:    1
   498 ;; This function calls:
   499 ;;		_velocidad_efecto
   500 ;; This function is called by:
   501 ;;		_main
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           	psect	text2
   506  007DAA                     __ptext2:
   507                           	opt stack 0
   508  007DAA                     _secuencial_Efecto3:
   509                           	opt stack 29
   510                           
   511                           ;Secuencia_Main.c: 93: for (int i = 0; i < 9; i++) {
   512                           
   513                           ;incstack = 0
   514  007DAA  0E00               	movlw	0
   515  007DAC  6E08               	movwf	secuencial_Efecto3@i+1,c
   516  007DAE  0E00               	movlw	0
   517  007DB0  6E07               	movwf	secuencial_Efecto3@i,c
   518  007DB2                     l862:
   519  007DB2  BE08               	btfsc	secuencial_Efecto3@i+1,7,c
   520  007DB4  D006               	goto	l55
   521  007DB6  5008               	movf	secuencial_Efecto3@i+1,w,c
   522  007DB8  E119               	bnz	l57
   523  007DBA  0E09               	movlw	9
   524  007DBC  5C07               	subwf	secuencial_Efecto3@i,w,c
   525  007DBE  B0D8               	btfsc	status,0,c
   526  007DC0  0012               	return	
   527  007DC2                     l55:
   528                           
   529                           ;Secuencia_Main.c: 94: LATD = (1 << i) - 1;
   530  007DC2  C007  F005         	movff	secuencial_Efecto3@i,??_secuencial_Efecto3
   531  007DC6  0E01               	movlw	1
   532  007DC8  6E06               	movwf	(??_secuencial_Efecto3+1)& (0+255),c
   533  007DCA  2A05               	incf	??_secuencial_Efecto3,f,c
   534  007DCC  D002               	goto	u374
   535  007DCE                     u375:
   536  007DCE  90D8               	bcf	status,0,c
   537  007DD0  3606               	rlcf	??_secuencial_Efecto3+1,f,c
   538  007DD2                     u374:
   539  007DD2  2E05               	decfsz	??_secuencial_Efecto3,f,c
   540  007DD4  D7FC               	goto	u375
   541  007DD6  0406               	decf	??_secuencial_Efecto3+1,w,c
   542  007DD8  6E8C               	movwf	3980,c	;volatile
   543                           
   544                           ;Secuencia_Main.c: 95: velocidad_efecto(velocidad);
   545  007DDA  C00F  F001         	movff	_velocidad,velocidad_efecto@p_velocidad
   546  007DDE  C010  F002         	movff	_velocidad+1,velocidad_efecto@p_velocidad+1
   547  007DE2  ECAB  F03F         	call	_velocidad_efecto	;wreg free
   548  007DE6  4A07               	infsnz	secuencial_Efecto3@i,f,c
   549  007DE8  2A08               	incf	secuencial_Efecto3@i+1,f,c
   550  007DEA  D7E3               	goto	l862
   551  007DEC                     l57:
   552  007DEC  0012               	return		;funcret
   553  007DEE                     __end_of_secuencial_Efecto3:
   554                           	opt stack 0
   555                           tblptru	equ	0xFF8
   556                           tblptrh	equ	0xFF7
   557                           tblptrl	equ	0xFF6
   558                           tablat	equ	0xFF5
   559                           intcon2	equ	0xFF1
   560                           postinc0	equ	0xFEE
   561                           wreg	equ	0xFE8
   562                           postdec1	equ	0xFE5
   563                           fsr1l	equ	0xFE1
   564                           status	equ	0xFD8
   565                           
   566 ;; *************** function _secuencial_Efecto2 *****************
   567 ;; Defined at:
   568 ;;		line 76 in file "Secuencia_Main.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;		None
   571 ;; Auto vars:     Size  Location     Type
   572 ;;  i               2   10[COMRAM] int 
   573 ;;  j               2    8[COMRAM] int 
   574 ;; Return value:  Size  Location     Type
   575 ;;                  1    wreg      void 
   576 ;; Registers used:
   577 ;;		wreg, status,2, status,0, cstack
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   583 ;;      Params:         0       0       0       0       0       0       0       0       0
   584 ;;      Locals:         4       0       0       0       0       0       0       0       0
   585 ;;      Temps:          4       0       0       0       0       0       0       0       0
   586 ;;      Totals:         8       0       0       0       0       0       0       0       0
   587 ;;Total ram usage:        8 bytes
   588 ;; Hardware stack levels used:    1
   589 ;; Hardware stack levels required when called:    1
   590 ;; This function calls:
   591 ;;		_velocidad_efecto
   592 ;; This function is called by:
   593 ;;		_main
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           	psect	text3
   598  007E52                     __ptext3:
   599                           	opt stack 0
   600  007E52                     _secuencial_Efecto2:
   601                           	opt stack 29
   602                           
   603                           ;Secuencia_Main.c: 77: for (int i = 0, j = 7; i < 8; i++, j--) {
   604                           
   605                           ;incstack = 0
   606  007E52  0E00               	movlw	0
   607  007E54  6E0C               	movwf	secuencial_Efecto2@i+1,c
   608  007E56  0E00               	movlw	0
   609  007E58  6E0B               	movwf	secuencial_Efecto2@i,c
   610  007E5A  0E00               	movlw	0
   611  007E5C  6E0A               	movwf	secuencial_Efecto2@j+1,c
   612  007E5E  0E07               	movlw	7
   613  007E60  6E09               	movwf	secuencial_Efecto2@j,c
   614  007E62                     l846:
   615  007E62  BE0C               	btfsc	secuencial_Efecto2@i+1,7,c
   616  007E64  D006               	goto	l50
   617  007E66  500C               	movf	secuencial_Efecto2@i+1,w,c
   618  007E68  E127               	bnz	l52
   619  007E6A  0E08               	movlw	8
   620  007E6C  5C0B               	subwf	secuencial_Efecto2@i,w,c
   621  007E6E  B0D8               	btfsc	status,0,c
   622  007E70  0012               	return	
   623  007E72                     l50:
   624                           
   625                           ;Secuencia_Main.c: 78: LATD = (1 << i) + (1 << j);
   626  007E72  C009  F005         	movff	secuencial_Efecto2@j,??_secuencial_Efecto2
   627  007E76  0E01               	movlw	1
   628  007E78  6E06               	movwf	(??_secuencial_Efecto2+1)& (0+255),c
   629  007E7A  2A05               	incf	??_secuencial_Efecto2,f,c
   630  007E7C  D002               	goto	u334
   631  007E7E                     u335:
   632  007E7E  90D8               	bcf	status,0,c
   633  007E80  3606               	rlcf	??_secuencial_Efecto2+1,f,c
   634  007E82                     u334:
   635  007E82  2E05               	decfsz	??_secuencial_Efecto2,f,c
   636  007E84  D7FC               	goto	u335
   637  007E86  C00B  F007         	movff	secuencial_Efecto2@i,??_secuencial_Efecto2+2
   638  007E8A  0E01               	movlw	1
   639  007E8C  6E08               	movwf	(??_secuencial_Efecto2+3)& (0+255),c
   640  007E8E  2A07               	incf	??_secuencial_Efecto2+2,f,c
   641  007E90  D002               	goto	u344
   642  007E92                     u345:
   643  007E92  90D8               	bcf	status,0,c
   644  007E94  3608               	rlcf	??_secuencial_Efecto2+3,f,c
   645  007E96                     u344:
   646  007E96  2E07               	decfsz	??_secuencial_Efecto2+2,f,c
   647  007E98  D7FC               	goto	u345
   648  007E9A  5008               	movf	??_secuencial_Efecto2+3,w,c
   649  007E9C  2406               	addwf	??_secuencial_Efecto2+1,w,c
   650  007E9E  6E8C               	movwf	3980,c	;volatile
   651                           
   652                           ;Secuencia_Main.c: 79: velocidad_efecto(velocidad);
   653  007EA0  C00F  F001         	movff	_velocidad,velocidad_efecto@p_velocidad
   654  007EA4  C010  F002         	movff	_velocidad+1,velocidad_efecto@p_velocidad+1
   655  007EA8  ECAB  F03F         	call	_velocidad_efecto	;wreg free
   656  007EAC  4A0B               	infsnz	secuencial_Efecto2@i,f,c
   657  007EAE  2A0C               	incf	secuencial_Efecto2@i+1,f,c
   658  007EB0  0609               	decf	secuencial_Efecto2@j,f,c
   659  007EB2  A0D8               	btfss	status,0,c
   660  007EB4  060A               	decf	secuencial_Efecto2@j+1,f,c
   661  007EB6  D7D5               	goto	l846
   662  007EB8                     l52:
   663  007EB8  0012               	return		;funcret
   664  007EBA                     __end_of_secuencial_Efecto2:
   665                           	opt stack 0
   666                           tblptru	equ	0xFF8
   667                           tblptrh	equ	0xFF7
   668                           tblptrl	equ	0xFF6
   669                           tablat	equ	0xFF5
   670                           intcon2	equ	0xFF1
   671                           postinc0	equ	0xFEE
   672                           wreg	equ	0xFE8
   673                           postdec1	equ	0xFE5
   674                           fsr1l	equ	0xFE1
   675                           status	equ	0xFD8
   676                           
   677 ;; *************** function _secuencial_Efecto1 *****************
   678 ;; Defined at:
   679 ;;		line 60 in file "Secuencia_Main.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;		None
   682 ;; Auto vars:     Size  Location     Type
   683 ;;  i               2    6[COMRAM] int 
   684 ;; Return value:  Size  Location     Type
   685 ;;                  1    wreg      void 
   686 ;; Registers used:
   687 ;;		wreg, status,2, status,0, cstack
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   693 ;;      Params:         0       0       0       0       0       0       0       0       0
   694 ;;      Locals:         2       0       0       0       0       0       0       0       0
   695 ;;      Temps:          2       0       0       0       0       0       0       0       0
   696 ;;      Totals:         4       0       0       0       0       0       0       0       0
   697 ;;Total ram usage:        4 bytes
   698 ;; Hardware stack levels used:    1
   699 ;; Hardware stack levels required when called:    1
   700 ;; This function calls:
   701 ;;		_velocidad_efecto
   702 ;; This function is called by:
   703 ;;		_main
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           	psect	text4
   708  007D66                     __ptext4:
   709                           	opt stack 0
   710  007D66                     _secuencial_Efecto1:
   711                           	opt stack 29
   712                           
   713                           ;Secuencia_Main.c: 61: for (int i = 0; i < 8; i++) {
   714                           
   715                           ;incstack = 0
   716  007D66  0E00               	movlw	0
   717  007D68  6E08               	movwf	secuencial_Efecto1@i+1,c
   718  007D6A  0E00               	movlw	0
   719  007D6C  6E07               	movwf	secuencial_Efecto1@i,c
   720  007D6E                     l832:
   721  007D6E  BE08               	btfsc	secuencial_Efecto1@i+1,7,c
   722  007D70  D006               	goto	l45
   723  007D72  5008               	movf	secuencial_Efecto1@i+1,w,c
   724  007D74  E119               	bnz	l47
   725  007D76  0E08               	movlw	8
   726  007D78  5C07               	subwf	secuencial_Efecto1@i,w,c
   727  007D7A  B0D8               	btfsc	status,0,c
   728  007D7C  0012               	return	
   729  007D7E                     l45:
   730                           
   731                           ;Secuencia_Main.c: 62: LATD = 1 << i;
   732  007D7E  C007  F005         	movff	secuencial_Efecto1@i,??_secuencial_Efecto1
   733  007D82  0E01               	movlw	1
   734  007D84  6E06               	movwf	(??_secuencial_Efecto1+1)& (0+255),c
   735  007D86  2A05               	incf	??_secuencial_Efecto1,f,c
   736  007D88  D002               	goto	u304
   737  007D8A                     u305:
   738  007D8A  90D8               	bcf	status,0,c
   739  007D8C  3606               	rlcf	??_secuencial_Efecto1+1,f,c
   740  007D8E                     u304:
   741  007D8E  2E05               	decfsz	??_secuencial_Efecto1,f,c
   742  007D90  D7FC               	goto	u305
   743  007D92  5006               	movf	??_secuencial_Efecto1+1,w,c
   744  007D94  6E8C               	movwf	3980,c	;volatile
   745                           
   746                           ;Secuencia_Main.c: 63: velocidad_efecto(velocidad);
   747  007D96  C00F  F001         	movff	_velocidad,velocidad_efecto@p_velocidad
   748  007D9A  C010  F002         	movff	_velocidad+1,velocidad_efecto@p_velocidad+1
   749  007D9E  ECAB  F03F         	call	_velocidad_efecto	;wreg free
   750  007DA2  4A07               	infsnz	secuencial_Efecto1@i,f,c
   751  007DA4  2A08               	incf	secuencial_Efecto1@i+1,f,c
   752  007DA6  D7E3               	goto	l832
   753  007DA8                     l47:
   754  007DA8  0012               	return		;funcret
   755  007DAA                     __end_of_secuencial_Efecto1:
   756                           	opt stack 0
   757                           tblptru	equ	0xFF8
   758                           tblptrh	equ	0xFF7
   759                           tblptrl	equ	0xFF6
   760                           tablat	equ	0xFF5
   761                           intcon2	equ	0xFF1
   762                           postinc0	equ	0xFEE
   763                           wreg	equ	0xFE8
   764                           postdec1	equ	0xFE5
   765                           fsr1l	equ	0xFE1
   766                           status	equ	0xFD8
   767                           
   768 ;; *************** function _velocidad_efecto *****************
   769 ;; Defined at:
   770 ;;		line 127 in file "Secuencia_Main.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;  p_velocidad     2    0[COMRAM] unsigned int 
   773 ;; Auto vars:     Size  Location     Type
   774 ;;		None
   775 ;; Return value:  Size  Location     Type
   776 ;;                  1    wreg      void 
   777 ;; Registers used:
   778 ;;		wreg, status,2, status,0
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   784 ;;      Params:         2       0       0       0       0       0       0       0       0
   785 ;;      Locals:         0       0       0       0       0       0       0       0       0
   786 ;;      Temps:          2       0       0       0       0       0       0       0       0
   787 ;;      Totals:         4       0       0       0       0       0       0       0       0
   788 ;;Total ram usage:        4 bytes
   789 ;; Hardware stack levels used:    1
   790 ;; This function calls:
   791 ;;		Nothing
   792 ;; This function is called by:
   793 ;;		_secuencial_Efecto1
   794 ;;		_secuencial_Efecto2
   795 ;;		_secuencial_Efecto3
   796 ;;		_secuencial_Efecto4
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           	psect	text5
   801  007F56                     __ptext5:
   802                           	opt stack 0
   803  007F56                     _velocidad_efecto:
   804                           	opt stack 29
   805                           
   806                           ;Secuencia_Main.c: 128: if(p_velocidad==1){_delay((unsigned long)((50)*(8000000/4000.0))
      +                          );}
   807                           
   808                           ;incstack = 0
   809  007F56  0401               	decf	velocidad_efecto@p_velocidad,w,c
   810  007F58  1002               	iorwf	velocidad_efecto@p_velocidad+1,w,c
   811  007F5A  A4D8               	btfss	status,2,c
   812  007F5C  D008               	goto	l65
   813  007F5E  0E82               	movlw	130
   814  007F60  6E03               	movwf	??_velocidad_efecto& (0+255),c
   815  007F62  0EDE               	movlw	222
   816  007F64                     u467:
   817  007F64  2EE8               	decfsz	wreg,f,c
   818  007F66  D7FE               	bra	u467
   819  007F68  2E03               	decfsz	??_velocidad_efecto& (0+255),f,c
   820  007F6A  D7FC               	bra	u467
   821  007F6C  D034               	goto	l71
   822  007F6E                     l65:
   823                           
   824                           ;Secuencia_Main.c: 129: else if(p_velocidad==2){_delay((unsigned long)((100)*(8000000/40
      +                          00.0)));}
   825  007F6E  0E02               	movlw	2
   826  007F70  1801               	xorwf	velocidad_efecto@p_velocidad,w,c
   827  007F72  1002               	iorwf	velocidad_efecto@p_velocidad+1,w,c
   828  007F74  A4D8               	btfss	status,2,c
   829  007F76  D00D               	goto	l67
   830  007F78  0E02               	movlw	2
   831  007F7A  6E04               	movwf	(??_velocidad_efecto+1)& (0+255),c
   832  007F7C  0E04               	movlw	4
   833  007F7E  6E03               	movwf	??_velocidad_efecto& (0+255),c
   834  007F80  0EBA               	movlw	186
   835  007F82                     u477:
   836  007F82  2EE8               	decfsz	wreg,f,c
   837  007F84  D7FE               	bra	u477
   838  007F86  2E03               	decfsz	??_velocidad_efecto& (0+255),f,c
   839  007F88  D7FC               	bra	u477
   840  007F8A  2E04               	decfsz	(??_velocidad_efecto+1)& (0+255),f,c
   841  007F8C  D7FA               	bra	u477
   842  007F8E  D000               	nop2	
   843  007F90  D022               	goto	l71
   844  007F92                     l67:
   845                           
   846                           ;Secuencia_Main.c: 130: else if(p_velocidad==3){_delay((unsigned long)((200)*(8000000/40
      +                          00.0)));}
   847  007F92  0E03               	movlw	3
   848  007F94  1801               	xorwf	velocidad_efecto@p_velocidad,w,c
   849  007F96  1002               	iorwf	velocidad_efecto@p_velocidad+1,w,c
   850  007F98  A4D8               	btfss	status,2,c
   851  007F9A  D00C               	goto	l69
   852  007F9C  0E03               	movlw	3
   853  007F9E  6E04               	movwf	(??_velocidad_efecto+1)& (0+255),c
   854  007FA0  0E08               	movlw	8
   855  007FA2  6E03               	movwf	??_velocidad_efecto& (0+255),c
   856  007FA4  0E77               	movlw	119
   857  007FA6                     u487:
   858  007FA6  2EE8               	decfsz	wreg,f,c
   859  007FA8  D7FE               	bra	u487
   860  007FAA  2E03               	decfsz	??_velocidad_efecto& (0+255),f,c
   861  007FAC  D7FC               	bra	u487
   862  007FAE  2E04               	decfsz	(??_velocidad_efecto+1)& (0+255),f,c
   863  007FB0  D7FA               	bra	u487
   864  007FB2  D010               	goto	L1
   865  007FB4                     l69:
   866                           
   867                           ;Secuencia_Main.c: 131: else if(p_velocidad==4){_delay((unsigned long)((400)*(8000000/40
      +                          00.0)));}
   868  007FB4  0E04               	movlw	4
   869  007FB6  1801               	xorwf	velocidad_efecto@p_velocidad,w,c
   870  007FB8  1002               	iorwf	velocidad_efecto@p_velocidad+1,w,c
   871  007FBA  A4D8               	btfss	status,2,c
   872  007FBC  D00C               	goto	l71
   873  007FBE  0E05               	movlw	5
   874  007FC0  6E04               	movwf	(??_velocidad_efecto+1)& (0+255),c
   875  007FC2  0E0F               	movlw	15
   876  007FC4  6E03               	movwf	??_velocidad_efecto& (0+255),c
   877  007FC6  0EF1               	movlw	241
   878  007FC8                     u497:
   879  007FC8  2EE8               	decfsz	wreg,f,c
   880  007FCA  D7FE               	bra	u497
   881  007FCC  2E03               	decfsz	??_velocidad_efecto& (0+255),f,c
   882  007FCE  D7FC               	bra	u497
   883  007FD0  2E04               	decfsz	(??_velocidad_efecto+1)& (0+255),f,c
   884  007FD2  D7FA               	bra	u497
   885  007FD4                     L1:
   886  007FD4  F000               	nop	
   887  007FD6                     l71:
   888                           
   889                           ;Secuencia_Main.c: 133: if (!PORTBbits.RB6) {
   890  007FD6  BC81               	btfsc	3969,6,c	;volatile
   891  007FD8  0012               	return	
   892                           
   893                           ;Secuencia_Main.c: 134: _delay((unsigned long)((50)*(8000000/4000.0)));
   894  007FDA  0E82               	movlw	130
   895  007FDC  6E03               	movwf	??_velocidad_efecto& (0+255),c
   896  007FDE  0EDE               	movlw	222
   897  007FE0                     u507:
   898  007FE0  2EE8               	decfsz	wreg,f,c
   899  007FE2  D7FE               	bra	u507
   900  007FE4  2E03               	decfsz	??_velocidad_efecto& (0+255),f,c
   901  007FE6  D7FC               	bra	u507
   902                           
   903                           ;Secuencia_Main.c: 135: if(++p_velocidad==5){p_velocidad=1;}
   904  007FE8  4A01               	infsnz	velocidad_efecto@p_velocidad,f,c
   905  007FEA  2A02               	incf	velocidad_efecto@p_velocidad+1,f,c
   906  007FEC  0E05               	movlw	5
   907  007FEE  1801               	xorwf	velocidad_efecto@p_velocidad,w,c
   908  007FF0  1002               	iorwf	velocidad_efecto@p_velocidad+1,w,c
   909  007FF2  A4D8               	btfss	status,2,c
   910  007FF4  0012               	return	
   911  007FF6  0E00               	movlw	0
   912  007FF8  6E02               	movwf	velocidad_efecto@p_velocidad+1,c
   913  007FFA  0E01               	movlw	1
   914  007FFC  6E01               	movwf	velocidad_efecto@p_velocidad,c
   915  007FFE  0012               	return	
   916  008000                     __end_of_velocidad_efecto:
   917                           	opt stack 0
   918  0000                     tblptru	equ	0xFF8
   919                           tblptrh	equ	0xFF7
   920                           tblptrl	equ	0xFF6
   921                           tablat	equ	0xFF5
   922                           intcon2	equ	0xFF1
   923                           postinc0	equ	0xFEE
   924                           wreg	equ	0xFE8
   925                           postdec1	equ	0xFE5
   926                           fsr1l	equ	0xFE1
   927                           status	equ	0xFD8
   928                           tblptru	equ	0xFF8
   929                           tblptrh	equ	0xFF7
   930                           tblptrl	equ	0xFF6
   931                           tablat	equ	0xFF5
   932                           intcon2	equ	0xFF1
   933                           postinc0	equ	0xFEE
   934                           wreg	equ	0xFE8
   935                           postdec1	equ	0xFE5
   936                           fsr1l	equ	0xFE1
   937                           status	equ	0xFD8
   938                           
   939                           	psect	rparam
   940  0000                     tblptru	equ	0xFF8
   941                           tblptrh	equ	0xFF7
   942                           tblptrl	equ	0xFF6
   943                           tablat	equ	0xFF5
   944                           intcon2	equ	0xFF1
   945                           postinc0	equ	0xFEE
   946                           wreg	equ	0xFE8
   947                           postdec1	equ	0xFE5
   948                           fsr1l	equ	0xFE1
   949                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      19
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_secuencial_Efecto4
    _secuencial_Efecto4->_velocidad_efecto
    _secuencial_Efecto3->_velocidad_efecto
    _secuencial_Efecto2->_velocidad_efecto
    _secuencial_Efecto1->_velocidad_efecto

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2026
                                             13 COMRAM     1     1      0
                 _secuencial_Efecto1
                 _secuencial_Efecto2
                 _secuencial_Efecto3
                 _secuencial_Efecto4
 ---------------------------------------------------------------------------------
 (1) _secuencial_Efecto4                                   9     9      0     553
                                              4 COMRAM     9     9      0
                   _velocidad_efecto
 ---------------------------------------------------------------------------------
 (1) _secuencial_Efecto3                                   4     4      0     483
                                              4 COMRAM     4     4      0
                   _velocidad_efecto
 ---------------------------------------------------------------------------------
 (1) _secuencial_Efecto2                                   8     8      0     507
                                              4 COMRAM     8     8      0
                   _velocidad_efecto
 ---------------------------------------------------------------------------------
 (1) _secuencial_Efecto1                                   4     4      0     483
                                              4 COMRAM     4     4      0
                   _velocidad_efecto
 ---------------------------------------------------------------------------------
 (2) _velocidad_efecto                                     4     2      2     415
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _secuencial_Efecto1
     _velocidad_efecto
   _secuencial_Efecto2
     _velocidad_efecto
   _secuencial_Efecto3
     _velocidad_efecto
   _secuencial_Efecto4
     _velocidad_efecto

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      E      13       1       20.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      13      20        0.0%
DATA                 0      0      13       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Fri Nov 20 13:51:09 2020

                         l31 7DFC                           l50 7E72                           l34 7E36  
                         l35 7E1E                           l52 7EB8                           l60 7EE2  
                         l45 7D7E                           l37 7E24                           l62 7F54  
                         l38 7E2A                           l71 7FD6                           l47 7DA8  
                         l55 7DC2                           l39 7E30                           l65 7F6E  
                         l57 7DEC                           l67 7F92                           l69 7FB4  
                __CFG_BOR$ON 000000                  __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000  
                        l832 7D6E                          l846 7E62                          l862 7DB2  
                        l876 7ED2                 __CFG_CPB$OFF 000000                          u304 7D8E  
                        u305 7D8A                          u404 7EFE                          u405 7EF8  
                        u334 7E82                          u414 7F2E                          u335 7E7E  
                        u415 7F28                          u344 7E96                          u345 7E92  
               __CFG_CPD$OFF 000000                          u507 7FE0                          u374 7DD2  
                        u375 7DCE                          u457 7E06                          u467 7F64  
                        u477 7F82                          u487 7FA6                          u497 7FC8  
                        wreg 000FE8                 __CFG_LVP$OFF 000000                 __CFG_WDT$OFF 000000  
                       _LATD 000F8C                         _main 7DEE                         fsr1l 000FE1  
                       start 0000                __CFG_IESO$OFF 000000                __CFG_MCLRE$ON 000000  
               ___param_bank 000000               __CFG_CCP2MX$ON 000000                        ?_main 0001  
                      _TRISD 000F95                __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
             __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000  
                      tablat 000FF5                        status 000FD8               __CFG_ICPRT$OFF 000000  
            __initialization 7D3C                 __end_of_main 7E52             _velocidad_efecto 7F56  
                     ??_main 000E                __activetblptr 000002               __CFG_XINST$OFF 000000  
             __CFG_STVREN$ON 000000                       _efecto 0013   __end_of_secuencial_Efecto1 7DAA  
 __end_of_secuencial_Efecto2 7EBA   __end_of_secuencial_Efecto3 7DEE   __end_of_secuencial_Efecto4 7F56  
               __pdataCOMRAM 000F                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8                   __accesstop 0060      __end_of__initialization 7D5C  
            __CFG_PBADEN$OFF 000000                ___rparam_used 000001               __pcstackCOMRAM 0001  
        secuencial_Efecto1@i 0007          secuencial_Efecto2@i 000B          secuencial_Efecto2@j 0009  
        secuencial_Efecto3@i 0007          secuencial_Efecto4@i 0008          secuencial_Efecto4@m 000A  
        secuencial_Efecto4@n 000C     __end_of_velocidad_efecto 8000              __CFG_VREGEN$OFF 000000  
                    __Hparam 0000                      __Lparam 0000                      __pcinit 7D3C  
                    __ramtop 0800                      __ptext0 7DEE                      __ptext1 7EBA  
                    __ptext2 7DAA                      __ptext3 7E52                      __ptext4 7D66  
                    __ptext5 7F56         end_of_initialization 7D5C                __Lmediumconst 0000  
                    postdec1 000FE5                      postinc0 000FEE                    _PORTBbits 000F81  
velocidad_efecto@p_velocidad 0001                    _TRISBbits 000F93           _secuencial_Efecto1 7D66  
         _secuencial_Efecto2 7E52           _secuencial_Efecto3 7DAA           _secuencial_Efecto4 7EBA  
        ?_secuencial_Efecto1 0001          ?_secuencial_Efecto2 0001          ?_secuencial_Efecto3 0001  
        ?_secuencial_Efecto4 0001                __pidataCOMRAM 7D37         ??_secuencial_Efecto1 0005  
       ??_secuencial_Efecto2 0005         ??_secuencial_Efecto3 0005         ??_secuencial_Efecto4 0005  
        start_initialization 7D3C             __CFG_LPT1OSC$OFF 000000            ?_velocidad_efecto 0001  
         ??_velocidad_efecto 0003             __CFG_WDTPS$32768 000000                    _velocidad 000F  
                _INTCON2bits 000FF1                    copy_data0 7D50                     __Hrparam 0000  
                   __Lrparam 0000                __size_of_main 0064  __size_of_secuencial_Efecto1 0044  
__size_of_secuencial_Efecto2 0068  __size_of_secuencial_Efecto3 0044  __size_of_secuencial_Efecto4 009C  
  __size_of_velocidad_efecto 00AA          __CFG_FOSC$INTOSC_EC 000000  
